{"version":3,"sources":["Styles/vars.js","Styles/theme.js","Data/SICS-refdata.js","Data/Splat-data.js","lib/splatComms.ts","SplatComponents/splatBackendReducer.js","Components/common/SirField.js","Components/common/SirTextField.js","Components/common/SirReadOnlyField.js","Components/quick-business/splat/vars.js","Components/quick-business/BusinessTitle.js","Components/common/SirListGroup.js","Components/common/Section.js","Components/quick-business/IsCoinsurance.js","Components/quick-business/TypeOfParticipation.js","Components/quick-business/TypeOfBusiness.js","utils/utils.js","Components/quick-business/ReportingUnit.js","Components/quick-business/LifeCycleStatus.js","Components/quick-business/MainClassOfBusiness.js","Components/common/SirButtonGroup.js","Components/quick-business/ctrls/CtrlActions.js","Components/quick-business/Currency.js","Components/common/SirDatePicker.js","Components/quick-business/InsuredPeriod.js","Components/common/SirExpansionPanel.js","Components/common/SirMessage.js","Components/quick-business/ctrls/TypeOfBusinessPanel.js","Components/common/SirAutocomplete.js","Components/quick-business/optional/SearchableField.js","Components/common/SirButton.js","Components/quick-business/NrOfBusinesses.js","Process/CreateQuickBusiness.js","Process/Labs.js","App.js","serviceWorker.js","index.js"],"names":["bgColor","bgColorHover","brdColor","defaultTheme","createMuiTheme","theme","palette","primary","main","secondary","background","paper","default","error","shape","borderRadius","typography","fontFamily","overrides","MuiOutlinedInput","root","fontSize","pxToRem","height","input","padding","spacing","notchedOutline","borderColor","transition","MuiAutocomplete","inputRoot","endAdornment","clearIndicator","color","text","disabled","popupIndicator","mainCurrencyOptions","Name","Code","reportingUnitOptions","reinsurerOptions","ReportingUnitCodes","mainClassOfBusinessOptions","typeOfBusinessOptions","TypeOfParticipationCodes","typeOfParticipationOptions","relationshipCodes","Broker","Reinsurer","OriginalReinsurer","OtherReinsurer","FormerBroker","Cedent","OriginalCedent","Agent","Administrator","Insured","lifeCycleStatusOptions","nrOfBusinessesToCreateOptions","commonCurrency","Currency","Order","typeData","InsuredPeriod","name","propertyMap","TypeOfBusiness","type","isDerived","validation","access","IsCoinsurance","BusinessPartners","ReportingUnit","TypeOfParticipation","UWYear","MainCurrency","MainClassOfBusiness","LifeCycleStatus","StartDate","EndDate","ClassesOfBusiness","actionMap","immutable","kind","ProgramRef","originalUri","ContractLayers","ProgramId","GalaxyCreatePostResultProgramWrapper","Program","Partner","RelationshipCode","Favourite","Subsystem","Uri","View","UserSubsystemSetting","Value","Key","OptionsValue","GalaxyCreatePostResultInternalError500","statusCode","instance","detail","title","Id","mandatory","itemType","inherited","Description","SicsId","Active","ContractPOCoverview","process_IsCoinsurance","MainClassOfBusinessOptions","LifeCycleStatusOptions","TypeOfBusinessOptions","ReinsurerOptions","_deleted","process_MainCurrency","RelationshipCodes","ReportingUnitOptions","result","process_BusinessLayer","ShowCedentInUI","process_Insured","IsReadOnlyUser","NrOfBusinessesToCreateOptions","CurrentActivity","CurrentUser","process_TypeOfParticipation","process_EndDate","modified","process_ReportingUnit","process_Reinsurer","IsCreating","CoinsuranceIsDisabled","process_StartDate","process_UWYear","UserAuthorizedToWrite","process_Broker","process_LifeCycleStatus","process_MainClassOfBusiness","NrOfBusinessesToCreate","TypeOfParticipationOptions","process_TypeOfBusiness","MainCurrencyOptions","ShowInsuredInUI","process_Cedent","created","CanCreateBusiness","IsAdminUser","CloseSidenavAndInit","parameters","guard","returnType","GetFilteredReportingUnits","SetReportingUnitOptionsBasedOnReinsurer","Setup","ResetCoinsuranceValue","Init","InitializeRefData","InitializeRoot","SelectCedent","partner","TypeOfBusinessChange","UserAuthorizedAt","level","SetUpAuth","DeselectReinsurer","UserAuthorizedAtAnyOf","levels","GetReportingUnits","CopyValuesFromProcessToBusinessLayer","SetEndDateAndUWYear","ValidateInsuredPeriods","GetReinsurers","GetTypeOfParticipationMethods","SetTypeOfParticipation","GetBusinessPartners","filter","GetThirdParty","InitializeLifeCycleStatus","SelectBroker","InitializeUserPrefTypeOfBusiness","CreateBusiness","SelectInsured","GenerateDummyData","InitializeProcessVariables","DeselectInsured","ValidateBusinessRoot","DeselectCedent","SelectReinsurer","GetCurrencies","GetMainClassOfBusinesses","GetTypeOfBusinesses","DeselectBroker","GetReportingUnitsFromReinsurers","reinsurer","reinsurersWithRepUnits","CloseSidenav","SetReinsurerBasedOnReportingUnit","ContractLayerRef","BusinessId","InsuredPeriods","BusinessTitle","GalaxyCreatePostResultErrorWrapper","BadRequest","UnknownError","InternalError","SicsBusinessPartner","IsThirdParty","Location","IsBaseCompany","BaseCompanyGroup","AlertReason","Country","IsProvisional","IsBusinessPartner","Categories","UpperCaseName","IsAlert","Identifier","IsActive","SicsReportingUnit","PartnerRelationshipCode","ContractLayer","SicsMainClassOfBusiness","Fullname","Created","ReplacedFrom","RICCode","ReplacedWith","Replaced","GalaxyCreatePostResult","Errormessage","StatusCode","Body","SicsCurrency","Office","AdId","UserRole","SicsTypeOfParticipationMethod","SicsReinsurer","SicsTypeOfBusiness","GalaxyCreatePostResultBadRequest400","traceId","status","OIDCClaims","roles","UserDetailSetting","Type","UserRef","ReportingUnits","NewQuickBusinessMainCurrency","isAdmin","Role","email","MainRate","MainFX","idClaims","AltFX","Offices","DetailSettings","NewQuickBusinessTypeOfBusiness","isUserReadOnly","SubsystemSettings","isAuthorized","AltRate","Favourites","DisplayCurrency","state","refData","CommonCurrency","Date","undefined","event","eventName","__eventType","timestamp","eventId","id","origin","previousEventId","formatId","initiator","clientId","sessionId","correlationId","userId","extraId","errors","lastKnownEventId","fakeCompanies","uuid","correlationBase","substring","messageId","correlationFactory","Subject","logger","next","action","useStyles","makeStyles","position","display","flexDirection","alignItems","rootValid","label","marginBottom","paddingLeft","lineHeight","fontWeight","fontWeightMedium","letterSpacing","marginTop","labelErr","labelValid","hint","SirField","props","children","className","valid","useTheme","classes","clsx","SirTextField","inputRef","other","TextField","variant","InputLabelProps","shrink","fullWidth","hiddenLabel","width","justifyContent","item","backgroundColor","border","margin","whiteSpace","overflow","textOverflow","opacity","validIcon","editIcon","SirReadOnlyField","value","onClick","hideValidationIcon","ListItem","dense","button","ListItemText","SPLATFIELD","textAlign","marginRight","maxLength","useSplatField","setValue","useState","count","setCount","err","setErr","hasValue","_","isEmpty","open","setOpen","useRef","renderValue","useEffect","length","current","focus","select","onChange","e","target","onBlur","onKeyDown","key","inputProps","helperText","group","flexWrap","selected","SirListGroup","data","amount","maxGroupHeight","pxFieldHeight","vlu","List","style","maxHeight","map","orderBy","el","code","head","handleChange","brd_none","brd_top","borderTop","Section","switch","Switch","size","checked","processState","useSplatProcessState","typeOfParticipationCodes","typeOfParticipationOptionsFiltered","includes","editMode","untouched","section","formRow","flex","paddingRight","marginLeft","setValueParticipation","hasCoinsuranceClosed","edit","newValue","sleep","ms","Promise","resolve","setTimeout","reinsurerCode","reinsurerName","reinsurerAmount","option","optionName","optionCode","ruOptions","setValid","inputValue","setInputValue","touched","setTouched","addReinsurer","matchedReinsurer","options","sortBy","filterOptions","createFilterOptions","stringify","handleGetOptionLabel","validateValue","React","useCallback","handleOnBlur","Autocomplete","blurOnSelect","openOnFocus","groupBy","renderGroup","split","ListSubheader","component","tail","child","renderOption","renderInput","params","placeholder","getOptionLabel","getOptionSelected","reson","isObject","isNull","onInputChange","then","borderRightColor","btn","SirButtonGroup","callbackClick","ButtonGroup","Tooltip","Alt","Button","commonButton","link","textDecoration","linkClear","linkOk","CtrlActions","titleClear","titleOk","callbackClear","callbackOk","Link","href","autocomplete","handleOpen","currency","maxWidth","right","transform","SirDatePicker","onEnter","onAccept","handleOnKeyDown","dateAdapter","MomentUtils","autoOk","inputFormat","mask","ref","InputProps","unselected","viewMode","from","separator","to","toUnlocked","duration","lockIcon","editActions","linkTo","borderBottom","componentMode","commonDates","isDateValid","date","moment","isValid","lockTo","mode","setMode","setFrom","setTo","setDuration","errorFrom","setErrorFrom","errorTo","setErrorTo","locked","setLocked","fromRef","toRef","setViewMode","calcDuration","fromDate","toDate","diff","setInsuredPeriod","changeMode","add","subtract","handleSetFrom","handleSetTo","handleOnEnterFrom","handleOnChangeFrom","handleOnAcceptFrom","handleOnEnterTo","handleOnChangeTo","handleOnAcceptTo","toggleLocked","closeEditMode","clearPeriod","renderTo","format","renderMode","isUnselectedMode","isViewMode","isEditMode","content","textTransform","details","icon","iconRotated","SirExpansionPanel","expanded","setExpanded","ExpansionPanel","elevation","newExpanded","ExpansionPanelSummary","ExpansionPanelDetails","left","top","SirMessage","enhanced","TypeOfBusinessPanel","SirAutocomplete","splatField","SirButton","disableElevation","minWidth","iconButton","NrOfBusinesses","IconButton","actions","CreateQuickBusiness","SplatData","console","log","Labs","App","middleware","ThemeProvider","CssBaseline","Splat","instanceUri","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"uPAkCaA,EAAO,eAtBY,aAsBZ,UACPC,EAAY,eAvBO,aAuBP,SACZC,EAAQ,eAxBW,aAwBX,U,SCtBfC,EAAeC,cAGRC,EAAQD,YAAe,CAClCE,QAAS,CACPC,QAAS,CACPC,KDT0B,WCW5BC,UAAW,CACTD,KDZ0B,WCc5BE,WAAY,CACVC,MDF0B,UCG1BC,QDF0B,WCI5BC,MAAO,CACLL,KDhB0B,YCmB9BM,MAAO,CACLC,aD7B4B,GC+B9BC,WAAY,CACVC,WDpC8B,wICsChCC,UAAW,CACTC,iBAAkB,CAChBC,KAAM,CACJC,SAAUlB,EAAaa,WAAWM,QDxCR,ICyC1BC,OAAQpB,EAAaa,WAAWM,QDfR,KCiB1BE,MAAO,CACLD,OAAQ,QACRE,QAAStB,EAAauB,QAAQ,EAAG,IAEnCC,eAAgB,CACdC,YAAa,kBACbC,WAAY,8CAGhBC,gBAAiB,CACfV,KAAM,GACNW,UAAW,CACT,oCAAqC,CACnCN,QAAS,EAET,uCAAwC,CACtCA,QAAStB,EAAauB,QAAQ,EAAG,MAIvCM,aAAc,GACdC,eAAgB,CACdZ,SAAUlB,EAAaa,WAAWM,QAAQ,IAC1CY,MAAO/B,EAAaG,QAAQ6B,KAAKC,SACjC,UAAW,CACTF,MAAO/B,EAAaG,QAAQ6B,KAAK5B,UAGrC8B,eAAgB,CACdhB,SAAUlB,EAAaa,WAAWM,QAAQ,IAC1CY,MAAO/B,EAAaG,QAAQ6B,KAAKC,SACjC,UAAW,CACTF,MAAO/B,EAAaG,QAAQ6B,KAAK5B,cCutC5B,GACb+B,oBAryCwB,CACxB,CACEC,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,OAER,CACED,KAAM,MACNC,KAAM,QA+0BRC,qBA30ByB,CACzB,CACEF,KAAM,iBACNC,KAAM,QAER,CACED,KAAM,eACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,4BACNC,KAAM,QAER,CACED,KAAM,uBACNC,KAAM,QAER,CACED,KAAM,yBACNC,KAAM,QAER,CACED,KAAM,cACNC,KAAM,QAER,CACED,KAAM,oBACNC,KAAM,QAER,CACED,KAAM,uBACNC,KAAM,QAER,CACED,KAAM,YACNC,KAAM,QAER,CACED,KAAM,gCACNC,KAAM,QAER,CACED,KAAM,qBACNC,KAAM,QAER,CACED,KAAM,YACNC,KAAM,QAER,CACED,KAAM,WACNC,KAAM,QAER,CACED,KAAM,kBACNC,KAAM,QAER,CACED,KAAM,sBACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,iCACNC,KAAM,QAER,CACED,KAAM,gCACNC,KAAM,QAER,CACED,KAAM,gBACNC,KAAM,QAER,CACED,KAAM,iCACNC,KAAM,QAER,CACED,KAAM,sBACNC,KAAM,QAER,CACED,KAAM,oBACNC,KAAM,QAER,CACED,KAAM,iBACNC,KAAM,QAER,CACED,KAAM,sCACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,oBACNC,KAAM,QAER,CACED,KAAM,+BACNC,KAAM,QAER,CACED,KAAM,6BACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,6BACNC,KAAM,QAER,CACED,KAAM,oBACNC,KAAM,QAER,CACED,KAAM,yBACNC,KAAM,QAER,CACED,KAAM,yBACNC,KAAM,QAER,CACED,KAAM,UACNC,KAAM,QAER,CACED,KAAM,iCACNC,KAAM,QAER,CACED,KAAM,4BACNC,KAAM,QAER,CACED,KAAM,eACNC,KAAM,QAER,CACED,KAAM,+BACNC,KAAM,QAER,CACED,KAAM,UACNC,KAAM,QAER,CACED,KAAM,oBACNC,KAAM,QAER,CACED,KAAM,mCACNC,KAAM,QAER,CACED,KAAM,sBACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,aACNC,KAAM,QAER,CACED,KAAM,mCACNC,KAAM,QAER,CACED,KAAM,8BACNC,KAAM,QAER,CACED,KAAM,sBACNC,KAAM,QAER,CACED,KAAM,4BACNC,KAAM,QAER,CACED,KAAM,iBACNC,KAAM,QAER,CACED,KAAM,oBACNC,KAAM,QAER,CACED,KAAM,YACNC,KAAM,QAER,CACED,KAAM,qBACNC,KAAM,QAER,CACED,KAAM,iCACNC,KAAM,QAER,CACED,KAAM,gCACNC,KAAM,QAER,CACED,KAAM,sBACNC,KAAM,QAER,CACED,KAAM,wBACNC,KAAM,QAER,CACED,KAAM,cACNC,KAAM,QAER,CACED,KAAM,iBACNC,KAAM,QAER,CACED,KAAM,4BACNC,KAAM,QAER,CACED,KAAM,iBACNC,KAAM,QAER,CACED,KAAM,iBACNC,KAAM,QAER,CACED,KAAM,YACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,SACNC,KAAM,QAER,CACED,KAAM,gCACNC,KAAM,QAER,CACED,KAAM,2BACNC,KAAM,QAER,CACED,KAAM,iCACNC,KAAM,QAER,CACED,KAAM,6BACNC,KAAM,QAER,CACED,KAAM,wBACNC,KAAM,QAER,CACED,KAAM,sBACNC,KAAM,QAER,CACED,KAAM,wBACNC,KAAM,QAER,CACED,KAAM,2BACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,mCACNC,KAAM,QAER,CACED,KAAM,wBACNC,KAAM,QAER,CACED,KAAM,wBACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,gBACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,yBACNC,KAAM,QAER,CACED,KAAM,qBACNC,KAAM,QAER,CACED,KAAM,6BACNC,KAAM,QAER,CACED,KAAM,kBACNC,KAAM,QAER,CACED,KAAM,YACNC,KAAM,QAER,CACED,KAAM,kBACNC,KAAM,QAER,CACED,KAAM,cACNC,KAAM,QAER,CACED,KAAM,sBACNC,KAAM,QAER,CACED,KAAM,YACNC,KAAM,QAER,CACED,KAAM,gCACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,uBACNC,KAAM,QAER,CACED,KAAM,cACNC,KAAM,QAER,CACED,KAAM,kBACNC,KAAM,QAER,CACED,KAAM,mBACNC,KAAM,QAER,CACED,KAAM,gBACNC,KAAM,QAER,CACED,KAAM,UACNC,KAAM,SAycRE,iBArcqB,CACrB,CACEC,mBAAoB,CAAC,OAAQ,QAC7BJ,KAAM,YACNC,KAAM,UAER,CACEG,mBAAoB,CAAC,OAAQ,QAC7BJ,KAAM,QACNC,KAAM,UAER,CACEG,mBAAoB,CAAC,qCACrBJ,KAAM,WACNC,KAAM,UAER,CACEG,mBAAoB,CAClB,OACA,OACA,OACA,OACA,OACA,OACA,QAEFJ,KAAM,WACNC,KAAM,UAER,CACEG,mBAAoB,CAAC,QACrBJ,KAAM,YACNC,KAAM,UAER,CACEG,mBAAoB,CAAC,qCACrBJ,KAAM,SACNC,KAAM,UAER,CACEG,mBAAoB,CAAC,qCACrBJ,KAAM,UACNC,KAAM,UAER,CACEG,mBAAoB,CAAC,qCACrBJ,KAAM,WACNC,KAAM,UAER,CACEG,mBAAoB,CA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EV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,QACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,QACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,QACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,QACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,QACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,OACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,SACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MAEV,CACE,KAAQ,WACR,KAAQ,MAEV,CACE,KAAQ,UACR,KAAQ,MAEV,CACE,KAAQ,YACR,KAAQ,MA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","file":"static/js/main.68dc9b73.chunk.js","sourcesContent":["// typography\nexport const fontFamily         = \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\nexport const fontSizeTextField  = 14\n\n// shape\nexport const brdRadius        = 3\n\n// colors\nexport const hexPrimary       = '#002C73'\nexport const rgbPrimary       = '0, 44, 115'\n\nexport const hexSecondary     = '#0060A5'\nexport const rgbSecondary     = '0, 96, 165'\n\nexport const hexError         = '#b22000'\n\nexport const hexValid         = '#85b140'\nexport const hexValid50       = '#c8d598'\n\nexport const hexWarning       = '#faab4b'\nexport const hexWarning50     = '#fdd8a6'\n\n\n// surface / bg\nexport const hexPaper         = '#fcfcfc'\nexport const hexDefaultBg     = '#f2f2f2'\n\n// vars\nexport const pxFieldHeight    = 38 // px\n\n// panel / surface\nexport const bgSurface        = '#fcfcfc'\n\n// ctrl\nexport const bgColor          = `rgba(${rgbSecondary}, .12)`\nexport const bgColorHover     = `rgba(${rgbSecondary}, .2)`\nexport const brdColor         = `rgba(${rgbSecondary}, .38)`","import { \n  fontFamily,\n  brdRadius,\n  hexSecondary,\n  hexPaper,\n  hexDefaultBg, \n  fontSizeTextField,\n  pxFieldHeight,\n  hexError\n} from './vars'\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// use to get access to default values and mixins\nconst defaultTheme = createMuiTheme()\n\n// sirius custom theme\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: hexSecondary\n    },\n    secondary: {\n      main: hexSecondary\n    },\n    background: {\n      paper: hexPaper,\n      default: hexDefaultBg\n    },\n    error: {\n      main: hexError\n    }\n  },\n  shape: {\n    borderRadius: brdRadius\n  },\n  typography: {\n    fontFamily: fontFamily\n  },\n  overrides: {\n    MuiOutlinedInput: {\n      root: {\n        fontSize: defaultTheme.typography.pxToRem(fontSizeTextField),\n        height: defaultTheme.typography.pxToRem(pxFieldHeight),\n      },\n      input: {\n        height: 'unset',\n        padding: defaultTheme.spacing(1, 2)\n      },\n      notchedOutline: {\n        borderColor: 'rgba(0,0,0,.12)',\n        transition: 'border 200ms cubic-bezier(0.4, 0, 0.2, 1)'\n      }\n    },\n    MuiAutocomplete: {\n      root: {},\n      inputRoot: {\n        '&[class*=\"MuiOutlinedInput-root\"]': {\n          padding: 0,\n\n          '& .MuiAutocomplete-input:first-child': {\n            padding: defaultTheme.spacing(1, 2)\n          }\n        }\n      },\n      endAdornment: {},\n      clearIndicator: {\n        fontSize: defaultTheme.typography.pxToRem(20),\n        color: defaultTheme.palette.text.disabled,\n        '&:hover': {\n          color: defaultTheme.palette.text.primary\n        }\n      },\n      popupIndicator: {\n        fontSize: defaultTheme.typography.pxToRem(20),\n        color: defaultTheme.palette.text.disabled,\n        '&:hover': {\n          color: defaultTheme.palette.text.primary\n        }\n      }\n    }\n  }\n})","let mainCurrencyOptions = [\n  {\n    Name: \"AED\",\n    Code: \"AED\",\n  },\n  {\n    Name: \"AMD\",\n    Code: \"AMD\",\n  },\n  {\n    Name: \"ANG\",\n    Code: \"ANG\",\n  },\n  {\n    Name: \"ARS\",\n    Code: \"ARS\",\n  },\n  {\n    Name: \"AUD\",\n    Code: \"AUD\",\n  },\n  {\n    Name: \"AWG\",\n    Code: \"AWG\",\n  },\n  {\n    Name: \"AZN\",\n    Code: \"AZN\",\n  },\n  {\n    Name: \"BBD\",\n    Code: \"BBD\",\n  },\n  {\n    Name: \"BDT\",\n    Code: \"BDT\",\n  },\n  {\n    Name: \"BGN\",\n    Code: \"BGN\",\n  },\n  {\n    Name: \"BHD\",\n    Code: \"BHD\",\n  },\n  {\n    Name: \"BIF\",\n    Code: \"BIF\",\n  },\n  {\n    Name: \"BMD\",\n    Code: \"BMD\",\n  },\n  {\n    Name: \"BND\",\n    Code: \"BND\",\n  },\n  {\n    Name: \"BOB\",\n    Code: \"BOB\",\n  },\n  {\n    Name: \"BRL\",\n    Code: \"BRL\",\n  },\n  {\n    Name: \"BSD\",\n    Code: \"BSD\",\n  },\n  {\n    Name: \"BWP\",\n    Code: \"BWP\",\n  },\n  {\n    Name: \"BZD\",\n    Code: \"BZD\",\n  },\n  {\n    Name: \"CAD\",\n    Code: \"CAD\",\n  },\n  {\n    Name: \"CHF\",\n    Code: \"CHF\",\n  },\n  {\n    Name: \"CLF\",\n    Code: \"CLF\",\n  },\n  {\n    Name: \"CLP\",\n    Code: \"CLP\",\n  },\n  {\n    Name: \"CNY\",\n    Code: \"CNY\",\n  },\n  {\n    Name: \"COP\",\n    Code: \"COP\",\n  },\n  {\n    Name: \"CRC\",\n    Code: \"CRC\",\n  },\n  {\n    Name: \"CUP\",\n    Code: \"CUP\",\n  },\n  {\n    Name: \"CVE\",\n    Code: \"CVE\",\n  },\n  {\n    Name: \"CZK\",\n    Code: \"CZK\",\n  },\n  {\n    Name: \"DKK\",\n    Code: \"DKK\",\n  },\n  {\n    Name: \"DOP\",\n    Code: \"DOP\",\n  },\n  {\n    Name: \"DZD\",\n    Code: \"DZD\",\n  },\n  {\n    Name: \"EGP\",\n    Code: \"EGP\",\n  },\n  {\n    Name: \"ETB\",\n    Code: \"ETB\",\n  },\n  {\n    Name: \"EUR\",\n    Code: \"EUR\",\n  },\n  {\n    Name: \"FJD\",\n    Code: \"FJD\",\n  },\n  {\n    Name: \"GBP\",\n    Code: \"GBP\",\n  },\n  {\n    Name: \"GHS\",\n    Code: \"GHS\",\n  },\n  {\n    Name: \"GIP\",\n    Code: \"GIP\",\n  },\n  {\n    Name: \"GTQ\",\n    Code: \"GTQ\",\n  },\n  {\n    Name: \"GYD\",\n    Code: \"GYD\",\n  },\n  {\n    Name: \"HKD\",\n    Code: \"HKD\",\n  },\n  {\n    Name: \"HNL\",\n    Code: \"HNL\",\n  },\n  {\n    Name: \"HRK\",\n    Code: \"HRK\",\n  },\n  {\n    Name: \"HTG\",\n    Code: \"HTG\",\n  },\n  {\n    Name: \"HUF\",\n    Code: \"HUF\",\n  },\n  {\n    Name: \"IDR\",\n    Code: \"IDR\",\n  },\n  {\n    Name: \"ILS\",\n    Code: \"ILS\",\n  },\n  {\n    Name: \"INR\",\n    Code: \"INR\",\n  },\n  {\n    Name: \"IQD\",\n    Code: \"IQD\",\n  },\n  {\n    Name: \"IRR\",\n    Code: \"IRR\",\n  },\n  {\n    Name: \"ISK\",\n    Code: \"ISK\",\n  },\n  {\n    Name: \"JMD\",\n    Code: \"JMD\",\n  },\n  {\n    Name: \"JOD\",\n    Code: \"JOD\",\n  },\n  {\n    Name: \"JPY\",\n    Code: \"JPY\",\n  },\n  {\n    Name: \"KES\",\n    Code: \"KES\",\n  },\n  {\n    Name: \"KPW\",\n    Code: \"KPW\",\n  },\n  {\n    Name: \"KRW\",\n    Code: \"KRW\",\n  },\n  {\n    Name: \"KWD\",\n    Code: \"KWD\",\n  },\n  {\n    Name: \"KYD\",\n    Code: \"KYD\",\n  },\n  {\n    Name: \"KZT\",\n    Code: \"KZT\",\n  },\n  {\n    Name: \"LBP\",\n    Code: \"LBP\",\n  },\n  {\n    Name: \"LKR\",\n    Code: \"LKR\",\n  },\n  {\n    Name: \"LYD\",\n    Code: \"LYD\",\n  },\n  {\n    Name: \"MAD\",\n    Code: \"MAD\",\n  },\n  {\n    Name: \"MGA\",\n    Code: \"MGA\",\n  },\n  {\n    Name: \"MMK\",\n    Code: \"MMK\",\n  },\n  {\n    Name: \"MNT\",\n    Code: \"MNT\",\n  },\n  {\n    Name: \"MOP\",\n    Code: \"MOP\",\n  },\n  {\n    Name: \"MUR\",\n    Code: \"MUR\",\n  },\n  {\n    Name: \"MVR\",\n    Code: \"MVR\",\n  },\n  {\n    Name: \"MXN\",\n    Code: \"MXN\",\n  },\n  {\n    Name: \"MYR\",\n    Code: \"MYR\",\n  },\n  {\n    Name: \"MZN\",\n    Code: \"MZN\",\n  },\n  {\n    Name: \"NAD\",\n    Code: \"NAD\",\n  },\n  {\n    Name: \"NGN\",\n    Code: \"NGN\",\n  },\n  {\n    Name: \"NIO\",\n    Code: \"NIO\",\n  },\n  {\n    Name: \"NOK\",\n    Code: \"NOK\",\n  },\n  {\n    Name: \"NPR\",\n    Code: \"NPR\",\n  },\n  {\n    Name: \"NZD\",\n    Code: \"NZD\",\n  },\n  {\n    Name: \"OMR\",\n    Code: \"OMR\",\n  },\n  {\n    Name: \"PAB\",\n    Code: \"PAB\",\n  },\n  {\n    Name: \"PEN\",\n    Code: \"PEN\",\n  },\n  {\n    Name: \"PGK\",\n    Code: \"PGK\",\n  },\n  {\n    Name: \"PHP\",\n    Code: \"PHP\",\n  },\n  {\n    Name: \"PKR\",\n    Code: \"PKR\",\n  },\n  {\n    Name: \"PLN\",\n    Code: \"PLN\",\n  },\n  {\n    Name: \"PYG\",\n    Code: \"PYG\",\n  },\n  {\n    Name: \"QAR\",\n    Code: \"QAR\",\n  },\n  {\n    Name: \"RON\",\n    Code: \"RON\",\n  },\n  {\n    Name: \"RSD\",\n    Code: \"RSD\",\n  },\n  {\n    Name: \"RUB\",\n    Code: \"RUB\",\n  },\n  {\n    Name: \"RWF\",\n    Code: \"RWF\",\n  },\n  {\n    Name: \"SAR\",\n    Code: \"SAR\",\n  },\n  {\n    Name: \"SDG\",\n    Code: \"SDG\",\n  },\n  {\n    Name: \"SEK\",\n    Code: \"SEK\",\n  },\n  {\n    Name: \"SGD\",\n    Code: \"SGD\",\n  },\n  {\n    Name: \"SVC\",\n    Code: \"SVC\",\n  },\n  {\n    Name: \"SYP\",\n    Code: \"SYP\",\n  },\n  {\n    Name: \"SZL\",\n    Code: \"SZL\",\n  },\n  {\n    Name: \"THB\",\n    Code: \"THB\",\n  },\n  {\n    Name: \"TND\",\n    Code: \"TND\",\n  },\n  {\n    Name: \"TRY\",\n    Code: \"TRY\",\n  },\n  {\n    Name: \"TTD\",\n    Code: \"TTD\",\n  },\n  {\n    Name: \"TWD\",\n    Code: \"TWD\",\n  },\n  {\n    Name: \"UAH\",\n    Code: \"UAH\",\n  },\n  {\n    Name: \"USD\",\n    Code: \"USD\",\n  },\n  {\n    Name: \"VES\",\n    Code: \"VES\",\n  },\n  {\n    Name: \"VND\",\n    Code: \"VND\",\n  },\n  {\n    Name: \"WST\",\n    Code: \"WST\",\n  },\n  {\n    Name: \"XAF\",\n    Code: \"XAF\",\n  },\n  {\n    Name: \"XCD\",\n    Code: \"XCD\",\n  },\n  {\n    Name: \"XDR\",\n    Code: \"XDR\",\n  },\n  {\n    Name: \"XOF\",\n    Code: \"XOF\",\n  },\n  {\n    Name: \"XPF\",\n    Code: \"XPF\",\n  },\n  {\n    Name: \"YER\",\n    Code: \"YER\",\n  },\n  {\n    Name: \"ZAR\",\n    Code: \"ZAR\",\n  },\n  {\n    Name: \"ZMW\",\n    Code: \"ZMW\",\n  },\n];\n\nlet reportingUnitOptions = [\n  {\n    Name: \"Alstead Sutton\",\n    Code: \"1262\",\n  },\n  {\n    Name: \"Alstead TPAC\",\n    Code: \"1263\",\n  },\n  {\n    Name: \"Australian AH UK\",\n    Code: \"5166\",\n  },\n  {\n    Name: \"Australian Contingency UK\",\n    Code: \"5168\",\n  },\n  {\n    Name: \"Australian Marine UK\",\n    Code: \"5162\",\n  },\n  {\n    Name: \"Australian Property UK\",\n    Code: \"5163\",\n  },\n  {\n    Name: \"BDA Bermuda\",\n    Code: \"1601\",\n  },\n  {\n    Name: \"BDA Miami Advised\",\n    Code: \"1621\",\n  },\n  {\n    Name: \"BDA New York Advised\",\n    Code: \"1611\",\n  },\n  {\n    Name: \"BE Africa\",\n    Code: \"3062\",\n  },\n  {\n    Name: \"BE Belgium, Luxemburg, Israel\",\n    Code: \"3061\",\n  },\n  {\n    Name: \"BE Credit and Bond\",\n    Code: \"3031\",\n  },\n  {\n    Name: \"BE France\",\n    Code: \"3042\",\n  },\n  {\n    Name: \"BE Italy\",\n    Code: \"3032\",\n  },\n  {\n    Name: \"BE Latinamerica\",\n    Code: \"3025\",\n  },\n  {\n    Name: \"BE Lloyds Argentina\",\n    Code: \"3082\",\n  },\n  {\n    Name: \"BE Lloyds Brazil\",\n    Code: \"3083\",\n  },\n  {\n    Name: \"BE Mexico,Cent Ameri,Ecu & Ven\",\n    Code: \"3024\",\n  },\n  {\n    Name: \"BE Netherlands, Mediterranean\",\n    Code: \"3015\",\n  },\n  {\n    Name: \"BE Run Off UK\",\n    Code: \"3011\",\n  },\n  {\n    Name: \"BE South America exc Ecu & Ven\",\n    Code: \"3021\",\n  },\n  {\n    Name: \"BE Spain & Portugal\",\n    Code: \"3023\",\n  },\n  {\n    Name: \"BM Bermuda Branch\",\n    Code: \"5201\",\n  },\n  {\n    Name: \"CH A&H/Life UK\",\n    Code: \"2395\",\n  },\n  {\n    Name: \"CH Aviation Foreign Direct Business\",\n    Code: \"2399\",\n  },\n  {\n    Name: \"CH Zurich Branch\",\n    Code: \"2391\",\n  },\n  {\n    Name: \"DE Central Europe\",\n    Code: \"2320\",\n  },\n  {\n    Name: \"DE Hamburg Prop Direct & Fac\",\n    Code: \"2322\",\n  },\n  {\n    Name: \"DK General Aviation Direct\",\n    Code: \"5010\",\n  },\n  {\n    Name: \"General Reserves\",\n    Code: \"2380\",\n  },\n  {\n    Name: \"General Reserves - Belgium\",\n    Code: \"3800\",\n  },\n  {\n    Name: \"SE - New York A&H\",\n    Code: \"2453\",\n  },\n  {\n    Name: \"SE - New York Casualty\",\n    Code: \"2452\",\n  },\n  {\n    Name: \"SE - New York Property\",\n    Code: \"2451\",\n  },\n  {\n    Name: \"SE Asia\",\n    Code: \"2340\",\n  },\n  {\n    Name: \"SE Aviation Direct Advisory CH\",\n    Code: \"2398\",\n  },\n  {\n    Name: \"SE Baltic, Eastern Europe\",\n    Code: \"2321\",\n  },\n  {\n    Name: \"SE Caribbean\",\n    Code: \"2314\",\n  },\n  {\n    Name: \"SE Caribbean - Miami Sourced\",\n    Code: \"2462\",\n  },\n  {\n    Name: \"SE Crop\",\n    Code: \"2323\",\n  },\n  {\n    Name: \"SE FARe Stockholm\",\n    Code: \"2424\",\n  },\n  {\n    Name: \"SE Latin America - Miami Sourced\",\n    Code: \"2461\",\n  },\n  {\n    Name: \"SE Nordic Countries\",\n    Code: \"2311\",\n  },\n  {\n    Name: \"SE North America\",\n    Code: \"2313\",\n  },\n  {\n    Name: \"SE Oceania\",\n    Code: \"2319\",\n  },\n  {\n    Name: \"SE Property Direct & Facultative\",\n    Code: \"2318\",\n  },\n  {\n    Name: \"SE Run Off Special Business\",\n    Code: \"2355\",\n  },\n  {\n    Name: \"SE Special Business\",\n    Code: \"2357\",\n  },\n  {\n    Name: \"SE Special Large Accounts\",\n    Code: \"2356\",\n  },\n  {\n    Name: \"SE Special u/w\",\n    Code: \"2358\",\n  },\n  {\n    Name: \"SE UK and Ireland\",\n    Code: \"2312\",\n  },\n  {\n    Name: \"SG Labuan\",\n    Code: \"2349\",\n  },\n  {\n    Name: \"SG Labuan Aviation\",\n    Code: \"2949\",\n  },\n  {\n    Name: \"SG Singapore Aviation offshore\",\n    Code: \"2948\",\n  },\n  {\n    Name: \"SG Singapore Aviation onshore\",\n    Code: \"2945\",\n  },\n  {\n    Name: \"SG Singapore Branch\",\n    Code: \"2345\",\n  },\n  {\n    Name: \"SG Singapore Offshore\",\n    Code: \"2348\",\n  },\n  {\n    Name: \"Star Re ILW\",\n    Code: \"1353\",\n  },\n  {\n    Name: \"UK AH excl IMG\",\n    Code: \"2366\",\n  },\n  {\n    Name: \"UK Casualty International\",\n    Code: \"2377\",\n  },\n  {\n    Name: \"UK Casualty US\",\n    Code: \"2374\",\n  },\n  {\n    Name: \"UK Contingency\",\n    Code: \"2368\",\n  },\n  {\n    Name: \"UK Energy\",\n    Code: \"2376\",\n  },\n  {\n    Name: \"UK Environmental\",\n    Code: \"2372\",\n  },\n  {\n    Name: \"UK IMG\",\n    Code: \"2364\",\n  },\n  {\n    Name: \"UK Interim Lloyds Contingency\",\n    Code: \"9968\",\n  },\n  {\n    Name: \"UK Interim Lloyds Marine\",\n    Code: \"9962\",\n  },\n  {\n    Name: \"UK Interim Lloyds Prop Primary\",\n    Code: \"9973\",\n  },\n  {\n    Name: \"UK Interim Lloyds Property\",\n    Code: \"9963\",\n  },\n  {\n    Name: \"UK Lloyds AH excl IMG\",\n    Code: \"1066\",\n  },\n  {\n    Name: \"UK Lloyds BE Marine\",\n    Code: \"1082\",\n  },\n  {\n    Name: \"UK Lloyds BE Property\",\n    Code: \"1083\",\n  },\n  {\n    Name: \"UK Lloyds CN AH excl IMG\",\n    Code: \"1096\",\n  },\n  {\n    Name: \"UK Lloyds CN IMG\",\n    Code: \"1094\",\n  },\n  {\n    Name: \"UK Lloyds Casualty International\",\n    Code: \"1077\",\n  },\n  {\n    Name: \"UK Lloyds Casualty US\",\n    Code: \"1074\",\n  },\n  {\n    Name: \"UK Lloyds Contingency\",\n    Code: \"1068\",\n  },\n  {\n    Name: \"UK Lloyds Energy\",\n    Code: \"1076\",\n  },\n  {\n    Name: \"UK Lloyds IMG\",\n    Code: \"1064\",\n  },\n  {\n    Name: \"UK Lloyds Marine\",\n    Code: \"1062\",\n  },\n  {\n    Name: \"UK Lloyds Marine Cargo\",\n    Code: \"1071\",\n  },\n  {\n    Name: \"UK Lloyds Property\",\n    Code: \"1063\",\n  },\n  {\n    Name: \"UK Lloyds Property Primary\",\n    Code: \"1073\",\n  },\n  {\n    Name: \"UK Lloyds Space\",\n    Code: \"1075\",\n  },\n  {\n    Name: \"UK Marine\",\n    Code: \"2362\",\n  },\n  {\n    Name: \"UK Marine Cargo\",\n    Code: \"2371\",\n  },\n  {\n    Name: \"UK Property\",\n    Code: \"2363\",\n  },\n  {\n    Name: \"UK Property Primary\",\n    Code: \"2373\",\n  },\n  {\n    Name: \"US Canada\",\n    Code: \"1471\",\n  },\n  {\n    Name: \"US English Speaking Caribbean\",\n    Code: \"1472\",\n  },\n  {\n    Name: \"US Latin America\",\n    Code: \"1452\",\n  },\n  {\n    Name: \"US Latin America FAC\",\n    Code: \"1455\",\n  },\n  {\n    Name: \"US New York\",\n    Code: \"1451\",\n  },\n  {\n    Name: \"US New York FAC\",\n    Code: \"1454\",\n  },\n  {\n    Name: \"US Surety Direct\",\n    Code: \"1457\",\n  },\n  {\n    Name: \"US Surety FAC\",\n    Code: \"1456\",\n  },\n  {\n    Name: \"US WMUL\",\n    Code: \"1453\",\n  },\n];\n\nlet reinsurerOptions = [\n  {\n    ReportingUnitCodes: [\"1471\", \"1472\"],\n    Name: \"Andershun\",\n    Code: \"108805\",\n  },\n  {\n    ReportingUnitCodes: [\"2391\", \"2395\"],\n    Name: \"Boink\",\n    Code: \"100571\",\n  },\n  {\n    ReportingUnitCodes: [\"No matching reporting units found\"],\n    Name: \"Bostonic\",\n    Code: \"102371\",\n  },\n  {\n    ReportingUnitCodes: [\n      \"1452\",\n      \"1455\",\n      \"1451\",\n      \"1454\",\n      \"1456\",\n      \"1457\",\n      \"1453\",\n    ],\n    Name: \"Candecor\",\n    Code: \"108804\",\n  },\n  {\n    ReportingUnitCodes: [\"1353\"],\n    Name: \"Combogene\",\n    Code: \"106167\",\n  },\n  {\n    ReportingUnitCodes: [\"No matching reporting units found\"],\n    Name: \"Comdom\",\n    Code: \"102370\",\n  },\n  {\n    ReportingUnitCodes: [\"No matching reporting units found\"],\n    Name: \"Comvene\",\n    Code: \"102368\",\n  },\n  {\n    ReportingUnitCodes: [\"No matching reporting units found\"],\n    Name: \"Empirica\",\n    Code: \"102369\",\n  },\n  {\n    ReportingUnitCodes: [\"5201\"],\n    Name: \"Geoforma\",\n    Code: \"103592\",\n  },\n  {\n    ReportingUnitCodes: [\"5010\"],\n    Name: \"Gink\",\n    Code: \"102117\",\n  },\n  {\n    ReportingUnitCodes: [\n      \"2424\",\n      \"2321\",\n      \"2380\",\n      \"2314\",\n      \"2318\",\n      \"2312\",\n      \"2398\",\n      \"2357\",\n      \"2313\",\n      \"2461\",\n      \"2340\",\n      \"2462\",\n      \"2355\",\n      \"2451\",\n      \"2311\",\n      \"2319\",\n      \"2452\",\n      \"2453\",\n      \"2323\",\n      \"2356\",\n      \"2358\",\n    ],\n    Name: \"Hopeli\",\n    Code: \"11110\",\n  },\n  {\n    ReportingUnitCodes: [\"2948\", \"2949\", \"2345\", \"2348\", \"2349\", \"2945\"],\n    Name: \"Isosphere\",\n    Code: \"13799\",\n  },\n  {\n    ReportingUnitCodes: [\"5162\", \"5166\", \"5168\", \"5163\"],\n    Name: \"Isotrack\",\n    Code: \"102552\",\n  },\n  {\n    ReportingUnitCodes: [\"1611\", \"1621\", \"1601\"],\n    Name: \"Kinetica\",\n    Code: \"110746\",\n  },\n  {\n    ReportingUnitCodes: [\n      \"3031\",\n      \"3023\",\n      \"3025\",\n      \"3011\",\n      \"3062\",\n      \"3032\",\n      \"3800\",\n      \"3042\",\n      \"3015\",\n      \"3024\",\n      \"3021\",\n      \"3061\",\n    ],\n    Name: \"Musaphics\",\n    Code: \"13960\",\n  },\n  {\n    ReportingUnitCodes: [\n      \"1082\",\n      \"1096\",\n      \"1068\",\n      \"1083\",\n      \"1066\",\n      \"1076\",\n      \"1064\",\n      \"1071\",\n      \"1062\",\n      \"1063\",\n      \"1073\",\n      \"1075\",\n      \"1074\",\n      \"1077\",\n      \"1094\",\n    ],\n    Name: \"Pawnagra\",\n    Code: \"104883\",\n  },\n  {\n    ReportingUnitCodes: [\"No matching reporting units found\"],\n    Name: \"Polarax\",\n    Code: \"102372\",\n  },\n  {\n    ReportingUnitCodes: [\"2322\", \"2320\"],\n    Name: \"Roughies\",\n    Code: \"13855\",\n  },\n  {\n    ReportingUnitCodes: [\"1262\", \"1263\"],\n    Name: \"Xylar\",\n    Code: \"110261\",\n  },\n  {\n    ReportingUnitCodes: [\n      \"9963\",\n      \"2373\",\n      \"9968\",\n      \"9973\",\n      \"2364\",\n      \"2362\",\n      \"2368\",\n      \"2366\",\n      \"2376\",\n      \"2372\",\n      \"2377\",\n      \"9962\",\n      \"2371\",\n      \"2374\",\n      \"2363\",\n    ],\n    Name: \"Zaj\",\n    Code: \"11468\",\n  },\n  {\n    ReportingUnitCodes: [\"2399\"],\n    Name: \"Zappix\",\n    Code: \"103267\",\n  },\n  {\n    ReportingUnitCodes: [\"3082\", \"3083\"],\n    Name: \"Zytrex\",\n    Code: \"109503\",\n  },\n];\n\nlet typeOfBusinessOptions = [\n  {\n    TypeOfParticipationCodes: [\"EMPTY\", \"BINDER\", \"LINESLIP\"],\n    Name: \"Non-Prop Direct\",\n    Code: \"NONPROPDIR\",\n  },\n  {\n    TypeOfParticipationCodes: [\"EMPTY\", \"BINDER\", \"LINESLIP\"],\n    Name: \"Non-Prop Facultative\",\n    Code: \"NONPROPFAC\",\n  },\n  {\n    TypeOfParticipationCodes: [\n      \"BINDER\",\n      \"CATBOND\",\n      \"CATSTOPL\",\n      \"CATXLPEREVENT\",\n      \"CLASHXL\",\n      \"DERIVATIVE\",\n      \"OPTN\",\n      \"STOPLOSS\",\n      \"SWAP\",\n      \"XLPERRISK\",\n      \"XLREP\",\n      \"XLRISKOREVENT\",\n      \"XLUMBRELLA\",\n    ],\n    Name: \"Non-Prop Treaty\",\n    Code: \"NONPROPTTY\",\n  },\n  {\n    TypeOfParticipationCodes: [\n      \"EMPTY\",\n      \"BINDER\",\n      \"LINESLIP\",\n      \"POOL PR\",\n      \"PRIMARY\",\n      \"TLO\",\n    ],\n    Name: \"Proportional Direct\",\n    Code: \"DIRECT\",\n  },\n  {\n    TypeOfParticipationCodes: [\"EMPTY\", \"BINDER\", \"LINESLIP\", \"PRIMARY\", \"TLO\"],\n    Name: \"Proportional Facultative\",\n    Code: \"PROPFAC\",\n  },\n  {\n    TypeOfParticipationCodes: [\n      \"BINDER\",\n      \"COMBINE\",\n      \"FACOBLIG\",\n      \"LINESLIP\",\n      \"POOL PR\",\n      \"QA\",\n      \"QAUNIT\",\n      \"SURPLUS\",\n      \"SURPLUSUNIT\",\n      \"XLPOOL\",\n    ],\n    Name: \"Proportional Treaty\",\n    Code: \"PROPTTY\",\n  },\n];\n\nlet typeOfParticipationOptions = [\n  {\n    \"Code\": \"BINDER\",\n    \"Name\": \"Binder\"\n  },\n  {\n    \"Code\": \"CATBOND\",\n    \"Name\": \"Cat Bond\"\n  },\n  {\n    \"Code\": \"CATSTOPL\",\n    \"Name\": \"Cat Stop Loss/Aggregate XL\"\n  },\n  {\n    \"Code\": \"CATXLPEREVENT\",\n    \"Name\": \"Cat XL\"\n  },\n  {\n    \"Code\": \"CLASHXL\",\n    \"Name\": \"Clash XL\"\n  },\n  {\n    \"Code\": \"COMBINE\",\n    \"Name\": \"QS & Spl\"\n  },\n  {\n    \"Code\": \"DERIVATIVE\",\n    \"Name\": \"Derivative\"\n  },\n  {\n    \"Code\": \"EMPTY\",\n    \"Name\": \"\"\n  },\n  {\n    \"Code\": \"FACOBLIG\",\n    \"Name\": \"Fac Oblig\"\n  },\n  {\n    \"Code\": \"LINESLIP\",\n    \"Name\": \"Lineslip\"\n  },\n  {\n    \"Code\": \"OPTN\",\n    \"Name\": \"Option\"\n  },\n  {\n    \"Code\": \"POOL PR\",\n    \"Name\": \"Pool\"\n  },\n  {\n    \"Code\": \"PRIMARY\",\n    \"Name\": \"Primary\"\n  },\n  {\n    \"Code\": \"QA\",\n    \"Name\": \"Quota Share\"\n  },\n  {\n    \"Code\": \"QAUNIT\",\n    \"Name\": \"Quota Share Unit Base\"\n  },\n  {\n    \"Code\": \"STOPLOSS\",\n    \"Name\": \"Stop Loss/Aggregate XL\"\n  },\n  {\n    \"Code\": \"SURPLUS\",\n    \"Name\": \"Surplus\"\n  },\n  {\n    \"Code\": \"SURPLUSUNIT\",\n    \"Name\": \"Surplus Unit Base\"\n  },\n  {\n    \"Code\": \"SWAP\",\n    \"Name\": \"Swap\"\n  },\n  {\n    \"Code\": \"TLO\",\n    \"Name\": \"TLO\"\n  },\n  {\n    \"Code\": \"XLPERRISK\",\n    \"Name\": \"Risk XL\"\n  },\n  {\n    \"Code\": \"XLPOOL\",\n    \"Name\": \"XL Pool\"\n  },\n  {\n    \"Code\": \"XLREP\",\n    \"Name\": \"Reporter XL\"\n  },\n  {\n    \"Code\": \"XLRISKOREVENT\",\n    \"Name\": \"Risk & Event XL\"\n  },\n  {\n    \"Code\": \"XLUMBRELLA\",\n    \"Name\": \"Umbrella - Ltd General XL\"\n  }\n]\n\nlet mainClassOfBusinessOptions = [\n  {\n    Name: \"Accident & Health\",\n    Code: \"A&H\",\n  },\n  {\n    Name: \"Aviation\",\n    Code: \"AVIATION\",\n  },\n  {\n    Name: \"Casualty\",\n    Code: \"CASUALTY\",\n  },\n  {\n    Name: \"Credit\",\n    Code: \"CREDIT\",\n  },\n  {\n    Name: \"Energy\",\n    Code: \"ENERGY\",\n  },\n  {\n    Name: \"Life\",\n    Code: \"LIFE\",\n  },\n  {\n    Name: \"MFL\",\n    Code: \"MFL\",\n  },\n  {\n    Name: \"Marine\",\n    Code: \"MARINE\",\n  },\n  {\n    Name: \"Property\",\n    Code: \"PROPERTY\",\n  },\n  {\n    Name: \"Space\",\n    Code: \"SPACE\",\n  },\n  {\n    Name: \"Suretyship\",\n    Code: \"SURSHIP\",\n  },\n];\n\nlet relationshipCodes = {\n  Broker: \"BR\",\n  Reinsurer: \"RR\",\n  OriginalReinsurer: \"ORIGR\",\n  OtherReinsurer: \"CRR\",\n  FormerBroker: \"FBR\",\n  Cedent: \"CR\",\n  OriginalCedent: \"OCR\",\n  Agent: \"AGTR\",\n  Administrator: \"AR\",\n  Insured: \"IR\",\n};\n\nlet lifeCycleStatusOptions = [\n  {\n    Name: \"New Agreement Offered\",\n    Code: \"NAO\",\n  },\n  {\n    Name: \"New Quote Requested\",\n    Code: \"NQR\",\n  },\n];\n\nlet nrOfBusinessesToCreateOptions = [(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)];\n\nlet commonCurrency = [\n  {\n    Name: \"USD\",\n    Code: \"USD\",\n    Currency: 'US Dollar',\n    Order: 1\n  },\n  {\n    Name: \"SEK\",\n    Code: \"SEK\",\n    Currency: 'Swedish Krona',\n    Order: 2\n  },\n  {\n    Name: \"EUR\",\n    Code: \"EUR\",\n    Currency: 'Euro',\n    Order: 3\n  },\n]\n\nexport default {\n  mainCurrencyOptions,\n  reportingUnitOptions,\n  reinsurerOptions,\n  mainClassOfBusinessOptions,\n  typeOfBusinessOptions,\n  typeOfParticipationOptions,\n  relationshipCodes,\n  lifeCycleStatusOptions,\n  nrOfBusinessesToCreateOptions,\n  commonCurrency,\n};\n\n\n\n","import refData from \"./SICS-refdata\";\n\nlet typeData = {\n  InsuredPeriod: {\n    name: \"InsuredPeriod\",\n    propertyMap: {\n      TypeOfBusiness: {\n        name: \"TypeOfBusiness\",\n        type: \"SicsTypeOfBusiness\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      IsCoinsurance: {\n        name: \"IsCoinsurance\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      BusinessPartners: {\n        name: \"BusinessPartners\",\n        type: \"Partner[]\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ReportingUnit: {\n        name: \"ReportingUnit\",\n        type: \"SicsReportingUnit\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      TypeOfParticipation: {\n        name: \"TypeOfParticipation\",\n        type: \"SicsTypeOfParticipationMethod\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      UWYear: {\n        name: \"UWYear\",\n        type: \":IntegerNumber\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      MainCurrency: {\n        name: \"MainCurrency\",\n        type: \"SicsCurrency\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      MainClassOfBusiness: {\n        name: \"MainClassOfBusiness\",\n        type: \"SicsMainClassOfBusiness\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      LifeCycleStatus: {\n        name: \"LifeCycleStatus\",\n        type: \"OptionsValue\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      StartDate: {\n        name: \"StartDate\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      EndDate: {\n        name: \"EndDate\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ClassesOfBusiness: {\n        name: \"ClassesOfBusiness\",\n        type: \":Text[]\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  ProgramRef: {\n    name: \"ProgramRef\",\n    propertyMap: {\n      originalUri: {\n        name: \"originalUri\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ContractLayers: {\n        name: \"ContractLayers\",\n        type: \"ContractLayerRef[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ProgramId: {\n        name: \"ProgramId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"EntityRelation\",\n  },\n  GalaxyCreatePostResultProgramWrapper: {\n    name: \"GalaxyCreatePostResultProgramWrapper\",\n    propertyMap: {\n      Program: {\n        name: \"Program\",\n        type: \"ProgramRef\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  Partner: {\n    name: \"Partner\",\n    propertyMap: {\n      RelationshipCode: {\n        name: \"RelationshipCode\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  Favourite: {\n    name: \"Favourite\",\n    propertyMap: {\n      Subsystem: {\n        name: \"Subsystem\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Uri: {\n        name: \"Uri\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      View: {\n        name: \"View\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  UserSubsystemSetting: {\n    name: \"UserSubsystemSetting\",\n    propertyMap: {\n      Subsystem: {\n        name: \"Subsystem\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Value: {\n        name: \"Value\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Key: {\n        name: \"Key\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  OptionsValue: {\n    name: \"OptionsValue\",\n    propertyMap: {\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  GalaxyCreatePostResultInternalError500: {\n    name: \"GalaxyCreatePostResultInternalError500\",\n    propertyMap: {\n      statusCode: {\n        name: \"statusCode\",\n        type: \":IntegerNumber\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      instance: {\n        name: \"instance\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      detail: {\n        name: \"detail\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      title: {\n        name: \"title\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      type: {\n        name: \"type\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  ReportingUnit: {\n    name: \"ReportingUnit\",\n    propertyMap: {\n      Id: {\n        name: \"Id\",\n        type: \":IntegerNumber\",\n        isDerived: false,\n        validation: {\n          mandatory: [\n            {\n              itemType: \"MandatoryValidationItem\",\n              inherited: true,\n            },\n          ],\n        },\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {\n          mandatory: [\n            {\n              itemType: \"MandatoryValidationItem\",\n              inherited: true,\n            },\n          ],\n        },\n        access: \"ReadOnly\",\n      },\n      Description: {\n        name: \"Description\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      SicsId: {\n        name: \"SicsId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Active: {\n        name: \"Active\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  ContractPOCoverview: {\n    name: \"ContractPOCoverview\",\n    propertyMap: {\n      process_IsCoinsurance: {\n        name: \"process_IsCoinsurance\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      MainClassOfBusinessOptions: {\n        name: \"MainClassOfBusinessOptions\",\n        type: \"SicsMainClassOfBusiness[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      LifeCycleStatusOptions: {\n        name: \"LifeCycleStatusOptions\",\n        type: \"OptionsValue[]\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      TypeOfBusinessOptions: {\n        name: \"TypeOfBusinessOptions\",\n        type: \"SicsTypeOfBusiness[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      ReinsurerOptions: {\n        name: \"ReinsurerOptions\",\n        type: \"SicsReinsurer[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      _deleted: {\n        name: \"_deleted\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      process_MainCurrency: {\n        name: \"process_MainCurrency\",\n        type: \"SicsCurrency\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      root: {\n        name: \"root\",\n        type: \"Program\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      RelationshipCodes: {\n        name: \"RelationshipCodes\",\n        type: \"PartnerRelationshipCode\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ReportingUnitOptions: {\n        name: \"ReportingUnitOptions\",\n        type: \"SicsReportingUnit[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      result: {\n        name: \"result\",\n        type: \"GalaxyCreatePostResult\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_BusinessLayer: {\n        name: \"process_BusinessLayer\",\n        type: \"ContractLayer\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      ShowCedentInUI: {\n        name: \"ShowCedentInUI\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_Insured: {\n        name: \"process_Insured\",\n        type: \"Partner\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      IsReadOnlyUser: {\n        name: \"IsReadOnlyUser\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      NrOfBusinessesToCreateOptions: {\n        name: \"NrOfBusinessesToCreateOptions\",\n        type: \":IntegerNumber[]\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      CurrentActivity: {\n        name: \"CurrentActivity\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      CurrentUser: {\n        name: \"CurrentUser\",\n        type: \"UserRef\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_TypeOfParticipation: {\n        name: \"process_TypeOfParticipation\",\n        type: \"SicsTypeOfParticipationMethod\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_EndDate: {\n        name: \"process_EndDate\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      modified: {\n        name: \"modified\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      process_ReportingUnit: {\n        name: \"process_ReportingUnit\",\n        type: \"SicsReportingUnit\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_Reinsurer: {\n        name: \"process_Reinsurer\",\n        type: \"SicsReinsurer\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      IsCreating: {\n        name: \"IsCreating\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      CoinsuranceIsDisabled: {\n        name: \"CoinsuranceIsDisabled\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_StartDate: {\n        name: \"process_StartDate\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_UWYear: {\n        name: \"process_UWYear\",\n        type: \":IntegerNumber\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      UserAuthorizedToWrite: {\n        name: \"UserAuthorizedToWrite\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      process_Broker: {\n        name: \"process_Broker\",\n        type: \"Partner\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_LifeCycleStatus: {\n        name: \"process_LifeCycleStatus\",\n        type: \"OptionsValue\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_MainClassOfBusiness: {\n        name: \"process_MainClassOfBusiness\",\n        type: \"SicsMainClassOfBusiness\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      NrOfBusinessesToCreate: {\n        name: \"NrOfBusinessesToCreate\",\n        type: \":IntegerNumber\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      TypeOfParticipationOptions: {\n        name: \"TypeOfParticipationOptions\",\n        type: \"SicsTypeOfParticipationMethod[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_TypeOfBusiness: {\n        name: \"process_TypeOfBusiness\",\n        type: \"SicsTypeOfBusiness\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      MainCurrencyOptions: {\n        name: \"MainCurrencyOptions\",\n        type: \"SicsCurrency[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      ShowInsuredInUI: {\n        name: \"ShowInsuredInUI\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      process_Cedent: {\n        name: \"process_Cedent\",\n        type: \"Partner\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      created: {\n        name: \"created\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      CanCreateBusiness: {\n        name: \"CanCreateBusiness\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      IsAdminUser: {\n        name: \"IsAdminUser\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {\n      CloseSidenavAndInit: {\n        name: \"CloseSidenavAndInit\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      GetFilteredReportingUnits: {\n        name: \"GetFilteredReportingUnits\",\n        parameters: {},\n        guard: null,\n        returnType: \"SicsReportingUnit[]\",\n      },\n      SetReportingUnitOptionsBasedOnReinsurer: {\n        name: \"SetReportingUnitOptionsBasedOnReinsurer\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      Setup: {\n        name: \"Setup\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      ResetCoinsuranceValue: {\n        name: \"ResetCoinsuranceValue\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      Init: {\n        name: \"Init\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      InitializeRefData: {\n        name: \"InitializeRefData\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      InitializeRoot: {\n        name: \"InitializeRoot\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      SelectCedent: {\n        name: \"SelectCedent\",\n        parameters: {\n          partner: {\n            name: \"partner\",\n            type: \"Partner\",\n          },\n        },\n        guard: null,\n        returnType: null,\n      },\n      TypeOfBusinessChange: {\n        name: \"TypeOfBusinessChange\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      UserAuthorizedAt: {\n        name: \"UserAuthorizedAt\",\n        parameters: {\n          level: {\n            name: \"level\",\n            type: \":Text\",\n          },\n        },\n        guard: null,\n        returnType: \":Flag\",\n      },\n      SetUpAuth: {\n        name: \"SetUpAuth\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      DeselectReinsurer: {\n        name: \"DeselectReinsurer\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      UserAuthorizedAtAnyOf: {\n        name: \"UserAuthorizedAtAnyOf\",\n        parameters: {\n          levels: {\n            name: \"levels\",\n            type: \":Text[]\",\n          },\n        },\n        guard: null,\n        returnType: \":Flag\",\n      },\n      GetReportingUnits: {\n        name: \"GetReportingUnits\",\n        parameters: {},\n        guard: null,\n        returnType: \"SicsReportingUnit[]\",\n      },\n      CopyValuesFromProcessToBusinessLayer: {\n        name: \"CopyValuesFromProcessToBusinessLayer\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      SetEndDateAndUWYear: {\n        name: \"SetEndDateAndUWYear\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      ValidateInsuredPeriods: {\n        name: \"ValidateInsuredPeriods\",\n        parameters: {},\n        guard: null,\n        returnType: \":Flag\",\n      },\n      GetReinsurers: {\n        name: \"GetReinsurers\",\n        parameters: {},\n        guard: null,\n        returnType: \"SicsReinsurer[]\",\n      },\n      GetTypeOfParticipationMethods: {\n        name: \"GetTypeOfParticipationMethods\",\n        parameters: {},\n        guard: null,\n        returnType: \"SicsTypeOfParticipationMethod[]\",\n      },\n      SetTypeOfParticipation: {\n        name: \"SetTypeOfParticipation\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      GetBusinessPartners: {\n        name: \"GetBusinessPartners\",\n        parameters: {\n          filter: {\n            name: \"filter\",\n            type: \":Text\",\n          },\n        },\n        guard: null,\n        returnType: \"Partner[]\",\n      },\n      GetThirdParty: {\n        name: \"GetThirdParty\",\n        parameters: {\n          filter: {\n            name: \"filter\",\n            type: \":Text\",\n          },\n        },\n        guard: null,\n        returnType: \"Partner[]\",\n      },\n      InitializeLifeCycleStatus: {\n        name: \"InitializeLifeCycleStatus\",\n        parameters: {},\n        guard: null,\n        returnType: \"OptionsValue\",\n      },\n      SelectBroker: {\n        name: \"SelectBroker\",\n        parameters: {\n          partner: {\n            name: \"partner\",\n            type: \"Partner\",\n          },\n        },\n        guard: null,\n        returnType: null,\n      },\n      InitializeUserPrefTypeOfBusiness: {\n        name: \"InitializeUserPrefTypeOfBusiness\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      CreateBusiness: {\n        name: \"CreateBusiness\",\n        parameters: {},\n        guard: \"CanCreateBusiness\",\n        returnType: null,\n      },\n      SelectInsured: {\n        name: \"SelectInsured\",\n        parameters: {\n          partner: {\n            name: \"partner\",\n            type: \"Partner\",\n          },\n        },\n        guard: null,\n        returnType: null,\n      },\n      GenerateDummyData: {\n        name: \"GenerateDummyData\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      InitializeProcessVariables: {\n        name: \"InitializeProcessVariables\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      DeselectInsured: {\n        name: \"DeselectInsured\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      ValidateBusinessRoot: {\n        name: \"ValidateBusinessRoot\",\n        parameters: {},\n        guard: null,\n        returnType: \":Flag\",\n      },\n      DeselectCedent: {\n        name: \"DeselectCedent\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      SelectReinsurer: {\n        name: \"SelectReinsurer\",\n        parameters: {\n          partner: {\n            name: \"partner\",\n            type: \"SicsReinsurer\",\n          },\n        },\n        guard: null,\n        returnType: null,\n      },\n      GetCurrencies: {\n        name: \"GetCurrencies\",\n        parameters: {},\n        guard: null,\n        returnType: \"SicsCurrency[]\",\n      },\n      GetMainClassOfBusinesses: {\n        name: \"GetMainClassOfBusinesses\",\n        parameters: {},\n        guard: null,\n        returnType: \"SicsMainClassOfBusiness[]\",\n      },\n      GetTypeOfBusinesses: {\n        name: \"GetTypeOfBusinesses\",\n        parameters: {},\n        guard: null,\n        returnType: \"SicsTypeOfBusiness[]\",\n      },\n      DeselectBroker: {\n        name: \"DeselectBroker\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      GetReportingUnitsFromReinsurers: {\n        name: \"GetReportingUnitsFromReinsurers\",\n        parameters: {\n          reinsurer: {\n            name: \"reinsurer\",\n            type: \"SicsBusinessPartner\",\n          },\n          reinsurersWithRepUnits: {\n            name: \"reinsurersWithRepUnits\",\n            type: \"SicsReinsurer[]\",\n          },\n        },\n        guard: null,\n        returnType: \":Text[]\",\n      },\n      CloseSidenav: {\n        name: \"CloseSidenav\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n      SetReinsurerBasedOnReportingUnit: {\n        name: \"SetReinsurerBasedOnReportingUnit\",\n        parameters: {},\n        guard: null,\n        returnType: null,\n      },\n    },\n    immutable: false,\n    kind: \"CrudProcess\",\n  },\n  ContractLayerRef: {\n    name: \"ContractLayerRef\",\n    propertyMap: {\n      BusinessId: {\n        name: \"BusinessId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      InsuredPeriods: {\n        name: \"InsuredPeriods\",\n        type: \"InsuredPeriod[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      BusinessTitle: {\n        name: \"BusinessTitle\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      originalUri: {\n        name: \"originalUri\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ProgramId: {\n        name: \"ProgramId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"EntityRelation\",\n  },\n  GalaxyCreatePostResultErrorWrapper: {\n    name: \"GalaxyCreatePostResultErrorWrapper\",\n    propertyMap: {\n      BadRequest: {\n        name: \"BadRequest\",\n        type: \"GalaxyCreatePostResultBadRequest400\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      UnknownError: {\n        name: \"UnknownError\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      InternalError: {\n        name: \"InternalError\",\n        type: \"GalaxyCreatePostResultInternalError500\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  SicsBusinessPartner: {\n    name: \"SicsBusinessPartner\",\n    propertyMap: {\n      IsThirdParty: {\n        name: \"IsThirdParty\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Location: {\n        name: \"Location\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      IsBaseCompany: {\n        name: \"IsBaseCompany\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      BaseCompanyGroup: {\n        name: \"BaseCompanyGroup\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      AlertReason: {\n        name: \"AlertReason\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Country: {\n        name: \"Country\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      IsProvisional: {\n        name: \"IsProvisional\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      IsBusinessPartner: {\n        name: \"IsBusinessPartner\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Categories: {\n        name: \"Categories\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      UpperCaseName: {\n        name: \"UpperCaseName\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      IsAlert: {\n        name: \"IsAlert\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Identifier: {\n        name: \"Identifier\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      IsActive: {\n        name: \"IsActive\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  Program: {\n    name: \"Program\",\n    propertyMap: {\n      _deleted: {\n        name: \"_deleted\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      modified: {\n        name: \"modified\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ContractLayers: {\n        name: \"ContractLayers\",\n        type: \"ContractLayerRef[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      ProgramId: {\n        name: \"ProgramId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      created: {\n        name: \"created\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: false,\n    kind: \"Entity\",\n  },\n  SicsReportingUnit: {\n    name: \"SicsReportingUnit\",\n    propertyMap: {\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  PartnerRelationshipCode: {\n    name: \"PartnerRelationshipCode\",\n    propertyMap: {\n      Broker: {\n        name: \"Broker\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Reinsurer: {\n        name: \"Reinsurer\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      OriginalReinsurer: {\n        name: \"OriginalReinsurer\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      OtherReinsurer: {\n        name: \"OtherReinsurer\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      FormerBroker: {\n        name: \"FormerBroker\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Cedent: {\n        name: \"Cedent\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      OriginalCedent: {\n        name: \"OriginalCedent\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Agent: {\n        name: \"Agent\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Administrator: {\n        name: \"Administrator\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Insured: {\n        name: \"Insured\",\n        type: \":Text\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  ContractLayer: {\n    name: \"ContractLayer\",\n    propertyMap: {\n      _deleted: {\n        name: \"_deleted\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      BusinessId: {\n        name: \"BusinessId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      InsuredPeriods: {\n        name: \"InsuredPeriods\",\n        type: \"InsuredPeriod[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      BusinessTitle: {\n        name: \"BusinessTitle\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      modified: {\n        name: \"modified\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ProgramId: {\n        name: \"ProgramId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadWrite\",\n      },\n      created: {\n        name: \"created\",\n        type: \":DateTime\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: false,\n    kind: \"Entity\",\n  },\n  SicsMainClassOfBusiness: {\n    name: \"SicsMainClassOfBusiness\",\n    propertyMap: {\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  Currency: {\n    name: \"Currency\",\n    propertyMap: {\n      Fullname: {\n        name: \"Fullname\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Created: {\n        name: \"Created\",\n        type: \":Date\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ReplacedFrom: {\n        name: \"ReplacedFrom\",\n        type: \":Date\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      RICCode: {\n        name: \"RICCode\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      ReplacedWith: {\n        name: \"ReplacedWith\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Replaced: {\n        name: \"Replaced\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Active: {\n        name: \"Active\",\n        type: \":Flag\",\n        isDerived: true,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  GalaxyCreatePostResult: {\n    name: \"GalaxyCreatePostResult\",\n    propertyMap: {\n      Errormessage: {\n        name: \"Errormessage\",\n        type: \"GalaxyCreatePostResultErrorWrapper\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      StatusCode: {\n        name: \"StatusCode\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Body: {\n        name: \"Body\",\n        type: \"GalaxyCreatePostResultProgramWrapper\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  SicsCurrency: {\n    name: \"SicsCurrency\",\n    propertyMap: {\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  Office: {\n    name: \"Office\",\n    propertyMap: {\n      Id: {\n        name: \"Id\",\n        type: \":IntegerNumber\",\n        isDerived: false,\n        validation: {\n          mandatory: [\n            {\n              itemType: \"MandatoryValidationItem\",\n              inherited: true,\n            },\n          ],\n        },\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {\n          mandatory: [\n            {\n              itemType: \"MandatoryValidationItem\",\n              inherited: true,\n            },\n          ],\n        },\n        access: \"ReadOnly\",\n      },\n      Description: {\n        name: \"Description\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      AdId: {\n        name: \"AdId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      SicsId: {\n        name: \"SicsId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Active: {\n        name: \"Active\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  UserRole: {\n    name: \"UserRole\",\n    propertyMap: {\n      Id: {\n        name: \"Id\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {\n          mandatory: [\n            {\n              itemType: \"MandatoryValidationItem\",\n              inherited: true,\n            },\n          ],\n        },\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {\n          mandatory: [\n            {\n              itemType: \"MandatoryValidationItem\",\n              inherited: true,\n            },\n          ],\n        },\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  SicsTypeOfParticipationMethod: {\n    name: \"SicsTypeOfParticipationMethod\",\n    propertyMap: {\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  SicsReinsurer: {\n    name: \"SicsReinsurer\",\n    propertyMap: {\n      ReportingUnitCodes: {\n        name: \"ReportingUnitCodes\",\n        type: \":Text[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  SicsTypeOfBusiness: {\n    name: \"SicsTypeOfBusiness\",\n    propertyMap: {\n      TypeOfParticipationCodes: {\n        name: \"TypeOfParticipationCodes\",\n        type: \":Text[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Code: {\n        name: \"Code\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  GalaxyCreatePostResultBadRequest400: {\n    name: \"GalaxyCreatePostResultBadRequest400\",\n    propertyMap: {\n      traceId: {\n        name: \"traceId\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      type: {\n        name: \"type\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      title: {\n        name: \"title\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      status: {\n        name: \"status\",\n        type: \":IntegerNumber\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  OIDCClaims: {\n    name: \"OIDCClaims\",\n    propertyMap: {\n      roles: {\n        name: \"roles\",\n        type: \":Text[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  UserDetailSetting: {\n    name: \"UserDetailSetting\",\n    propertyMap: {\n      Subsystem: {\n        name: \"Subsystem\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Value: {\n        name: \"Value\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Type: {\n        name: \"Type\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Key: {\n        name: \"Key\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"ValueObject\",\n  },\n  UserRef: {\n    name: \"UserRef\",\n    propertyMap: {\n      ReportingUnits: {\n        name: \"ReportingUnits\",\n        type: \"ReportingUnit[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      NewQuickBusinessMainCurrency: {\n        name: \"NewQuickBusinessMainCurrency\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      isAdmin: {\n        name: \"isAdmin\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Role: {\n        name: \"Role\",\n        type: \"UserRole\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Name: {\n        name: \"Name\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      email: {\n        name: \"email\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      MainRate: {\n        name: \"MainRate\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      MainFX: {\n        name: \"MainFX\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      idClaims: {\n        name: \"idClaims\",\n        type: \"OIDCClaims\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Description: {\n        name: \"Description\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      AltFX: {\n        name: \"AltFX\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Offices: {\n        name: \"Offices\",\n        type: \"Office[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      DetailSettings: {\n        name: \"DetailSettings\",\n        type: \"UserDetailSetting[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      NewQuickBusinessTypeOfBusiness: {\n        name: \"NewQuickBusinessTypeOfBusiness\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      originalUri: {\n        name: \"originalUri\",\n        type: \":Text\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      isUserReadOnly: {\n        name: \"isUserReadOnly\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      SubsystemSettings: {\n        name: \"SubsystemSettings\",\n        type: \"UserSubsystemSetting[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      isAuthorized: {\n        name: \"isAuthorized\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      AltRate: {\n        name: \"AltRate\",\n        type: \":Flag\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      Favourites: {\n        name: \"Favourites\",\n        type: \"Favourite[]\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n      DisplayCurrency: {\n        name: \"DisplayCurrency\",\n        type: \"Currency\",\n        isDerived: false,\n        validation: {},\n        access: \"ReadOnly\",\n      },\n    },\n    actionMap: {},\n    immutable: true,\n    kind: \"EntityRelation\",\n  },\n};\n\nlet currentUser = {\n  isAdmin: true,\n  Role: {\n    Id: \"A\",\n    Name: \"Underwriter\",\n  },\n  Name: \"katrina\",\n  email: \"katrina@test\",\n  idClaims: {\n    roles: [\"A\", \"gpi-admins\"],\n  },\n  originalUri:\n    \"spl://user/eda0ea26-6167-4cdb-9db4-1394d7fa2dbd/User/1efd674e-6350-4da4-ac07-959f2015772a\",\n  isUserReadOnly: false,\n  isAuthorized: true,\n  Favourites: [],\n};\n\nlet state = {\n  MainClassOfBusinessOptions: refData.mainClassOfBusinessOptions,\n  LifeCycleStatusOptions: refData.lifeCycleStatusOptions,\n  TypeOfBusinessOptions: refData.typeOfBusinessOptions,\n  TypeOfParticipationOptions: refData.typeOfParticipationOptions,\n  ReinsurerOptions: refData.reinsurerOptions,\n  MainCurrencyOptions: refData.mainCurrencyOptions,\n  RelationshipCodes: refData.relationshipCodes,\n  ReportingUnitOptions: refData.reportingUnitOptions,\n  NrOfBusinessesToCreateOptions: refData.nrOfBusinessesToCreateOptions,\n  CommonCurrency: refData.commonCurrency,\n  ShowCedentInUI: true,\n  IsReadOnlyUser: false,\n  CurrentActivity: \"contractPOCoverview\",\n  CurrentUser: currentUser,\n  IsCreating: false,\n  CoinsuranceIsDisabled: false,\n  UserAuthorizedToWrite: true,\n  NrOfBusinessesToCreate: 1,\n  ShowInsuredInUI: true,\n  CanCreateBusiness: false,\n  IsAdminUser: true,\n  root: {\n    created: \"2020-05-15T10:39:44.767581Z\",\n    modified: \"2020-05-15T10:39:44.767581Z\",\n  },\n  created: \"2020-05-15T10:39:44.610850Z\",\n  modified: \"2020-05-15T11:36:01.839408Z\",\n  process_IsCoinsurance: false,\n  process_MainCurrency: {\n    //Name: \"MAD\",\n    //Code: \"MAD\",\n  },\n  process_BusinessLayer: {\n    created: new Date(), //\"2020-05-15T11:33:49.389920Z\",\n    BusinessTitle: '', //\"Some Title\",\n    modified: undefined, //\"2020-05-15T11:35:44.291831Z\",\n    InsuredPeriods: [\n      {\n        TypeOfBusiness: {\n          TypeOfParticipationCodes: [\"EMPTY\", \"BINDER\", \"LINESLIP\"],\n          Name: \"Non-Prop Direct\",\n          Code: \"NONPROPDIR\",\n        },\n        IsCoinsurance: true,\n        BusinessPartners: [\n          {\n            RelationshipCode: \"RR\",\n            Name: \"Boink\",\n            Code: \"100571\",\n          },\n          {\n            RelationshipCode: \"BR\",\n            Name: \"Magnafone\",\n            Code: \"14645\",\n          },\n          {\n            RelationshipCode: \"IR\",\n            Name: \"Pharmacon\",\n            Code: \"66993\",\n          },\n        ],\n        ReportingUnit: {\n          Name: \"CH Zurich Branch\",\n          Code: \"2391\",\n        },\n        TypeOfParticipation: {\n          Name: \"Binder\",\n          Code: \"BINDER\",\n        },\n        UWYear: 2020,\n        MainCurrency: {\n          Name: \"MAD\",\n          Code: \"MAD\",\n        },\n        MainClassOfBusiness: {\n          Name: \"Aviation\",\n          Code: \"AVIATION\",\n        },\n        LifeCycleStatus: {\n          Name: \"New Quote Requested\",\n          Code: \"NQR\",\n        },\n        StartDate: \"2020-05-31T22:00Z\",\n        EndDate: \"2021-05-30T22:00Z\",\n        ClassesOfBusiness: [\"HEALTH\"],\n      },\n    ],\n  },\n  process_Insured: {\n    //RelationshipCode: \"IR\",\n    //Name: \"Pharmacon\",\n    //Code: \"66993\",\n  },\n  process_TypeOfParticipation: {\n  },\n  process_StartDate: undefined,\n  process_EndDate: undefined,\n  process_ReportingUnit: {\n    // Name: \"CH Zurich Branch\",\n    // Code: \"2391\",\n  },\n  process_Reinsurer: {\n    //ReportingUnitCodes: [\"2391\", \"2395\"],\n    //Name: \"Boink\",\n    //Code: \"100571\",\n  },\n  process_UWYear: undefined, //2020\n  process_TypeOfBusiness: {\n  },\n  process_Broker: {\n    // RelationshipCode: \"BR\",\n    // Name: \"Magnafone\",\n    // Code: \"14645\",\n  },\n  process_LifeCycleStatus: {\n    // Name: \"New Quote Requested\",\n    // Code: \"NQR\",\n  },\n  process_MainClassOfBusiness: {\n  },\n};\n\nlet event = {\n  eventName: \"ContractPOCoverviewTouched\",\n  __eventType: \"com.factor10.splat.metamodel.EntityTouched\",\n  timestamp: \"2020-05-15T10:40:47.665232Z\",\n  eventId: {\n    id: \"e0e1b2a8-385e-4253-aebd-d4533e3d39c2\",\n  },\n  origin:\n    \"spl://contract/eda0ea26-6167-4cdb-9db4-1394d7fa2dbd/ContractPOCoverview/d5114fc5-de88-449e-9355-7189793182ec\",\n  previousEventId: null,\n  formatId: \"c6b5b82f62a5956d9e4f7d7ce12ca6fe\",\n  initiator: {\n    clientId: \"4d9f0705cd92b39aef214f5540798081\",\n    sessionId: \"d2051778-09ca-47c5-8360-fa548017fd74\",\n    correlationId: \"t44e9OwSvN\",\n    userId: \"1efd674e-6350-4da4-ac07-959f2015772a\",\n    extraId: null,\n  },\n};\n\nlet fakeCompanies = [\n  {\n    \"Name\": \"Rubadub\",\n    \"Code\": 3575\n  },\n  {\n    \"Name\": \"Anacho\",\n    \"Code\": 3726\n  },\n  {\n    \"Name\": \"Elentrix\",\n    \"Code\": 9869\n  },\n  {\n    \"Name\": \"Parleynet\",\n    \"Code\": 6165\n  },\n  {\n    \"Name\": \"Zillar\",\n    \"Code\": 1167\n  },\n  {\n    \"Name\": \"Geekol\",\n    \"Code\": 2083\n  },\n  {\n    \"Name\": \"Puria\",\n    \"Code\": 1871\n  },\n  {\n    \"Name\": \"Polarium\",\n    \"Code\": 5760\n  },\n  {\n    \"Name\": \"Zuvy\",\n    \"Code\": 3927\n  },\n  {\n    \"Name\": \"Techade\",\n    \"Code\": 8240\n  },\n  {\n    \"Name\": \"Futurity\",\n    \"Code\": 5970\n  },\n  {\n    \"Name\": \"Insurety\",\n    \"Code\": 2176\n  },\n  {\n    \"Name\": \"Netur\",\n    \"Code\": 6512\n  },\n  {\n    \"Name\": \"Zenthall\",\n    \"Code\": 3574\n  },\n  {\n    \"Name\": \"Solaren\",\n    \"Code\": 5012\n  },\n  {\n    \"Name\": \"Accufarm\",\n    \"Code\": 4486\n  },\n  {\n    \"Name\": \"Rodeocean\",\n    \"Code\": 2157\n  },\n  {\n    \"Name\": \"Corpulse\",\n    \"Code\": 8863\n  },\n  {\n    \"Name\": \"Idealis\",\n    \"Code\": 3071\n  },\n  {\n    \"Name\": \"Mangelica\",\n    \"Code\": 4610\n  },\n  {\n    \"Name\": \"Spherix\",\n    \"Code\": 1820\n  },\n  {\n    \"Name\": \"Mazuda\",\n    \"Code\": 2192\n  },\n  {\n    \"Name\": \"Opticall\",\n    \"Code\": 4096\n  },\n  {\n    \"Name\": \"Uplinx\",\n    \"Code\": 7624\n  },\n  {\n    \"Name\": \"Xyqag\",\n    \"Code\": 9232\n  },\n  {\n    \"Name\": \"Zomboid\",\n    \"Code\": 2468\n  },\n  {\n    \"Name\": \"Insuresys\",\n    \"Code\": 4859\n  },\n  {\n    \"Name\": \"Corecom\",\n    \"Code\": 4899\n  },\n  {\n    \"Name\": \"Besto\",\n    \"Code\": 6096\n  },\n  {\n    \"Name\": \"Isotrack\",\n    \"Code\": 9637\n  },\n  {\n    \"Name\": \"Gaptec\",\n    \"Code\": 9028\n  },\n  {\n    \"Name\": \"Isoswitch\",\n    \"Code\": 1909\n  },\n  {\n    \"Name\": \"Petigems\",\n    \"Code\": 7450\n  },\n  {\n    \"Name\": \"Sarasonic\",\n    \"Code\": 4731\n  },\n  {\n    \"Name\": \"Zilidium\",\n    \"Code\": 2199\n  },\n  {\n    \"Name\": \"Ludak\",\n    \"Code\": 9011\n  },\n  {\n    \"Name\": \"Acumentor\",\n    \"Code\": 6483\n  },\n  {\n    \"Name\": \"Flexigen\",\n    \"Code\": 8256\n  },\n  {\n    \"Name\": \"Maroptic\",\n    \"Code\": 9880\n  },\n  {\n    \"Name\": \"Ziore\",\n    \"Code\": 4369\n  },\n  {\n    \"Name\": \"Slambda\",\n    \"Code\": 2082\n  },\n  {\n    \"Name\": \"Dreamia\",\n    \"Code\": 4415\n  },\n  {\n    \"Name\": \"Utara\",\n    \"Code\": 5072\n  },\n  {\n    \"Name\": \"Circum\",\n    \"Code\": 1891\n  },\n  {\n    \"Name\": \"Plasmox\",\n    \"Code\": 3408\n  },\n  {\n    \"Name\": \"Codact\",\n    \"Code\": 5621\n  },\n  {\n    \"Name\": \"Voratak\",\n    \"Code\": 4414\n  },\n  {\n    \"Name\": \"Apextri\",\n    \"Code\": 5573\n  },\n  {\n    \"Name\": \"Brainclip\",\n    \"Code\": 6549\n  },\n  {\n    \"Name\": \"Cyclonica\",\n    \"Code\": 2111\n  },\n  {\n    \"Name\": \"Comfirm\",\n    \"Code\": 7599\n  },\n  {\n    \"Name\": \"Datagen\",\n    \"Code\": 9134\n  },\n  {\n    \"Name\": \"Cipromox\",\n    \"Code\": 5214\n  },\n  {\n    \"Name\": \"Pawnagra\",\n    \"Code\": 8056\n  },\n  {\n    \"Name\": \"Gink\",\n    \"Code\": 2353\n  },\n  {\n    \"Name\": \"Insuron\",\n    \"Code\": 8053\n  },\n  {\n    \"Name\": \"Isologica\",\n    \"Code\": 8746\n  },\n  {\n    \"Name\": \"Tubesys\",\n    \"Code\": 6470\n  },\n  {\n    \"Name\": \"Organica\",\n    \"Code\": 8852\n  },\n  {\n    \"Name\": \"Kidgrease\",\n    \"Code\": 1541\n  },\n  {\n    \"Name\": \"Motovate\",\n    \"Code\": 6725\n  },\n  {\n    \"Name\": \"Zentix\",\n    \"Code\": 6156\n  },\n  {\n    \"Name\": \"Exostream\",\n    \"Code\": 1924\n  },\n  {\n    \"Name\": \"Fleetmix\",\n    \"Code\": 1583\n  },\n  {\n    \"Name\": \"Ezentia\",\n    \"Code\": 9250\n  },\n  {\n    \"Name\": \"Electonic\",\n    \"Code\": 3517\n  },\n  {\n    \"Name\": \"Golistic\",\n    \"Code\": 2206\n  },\n  {\n    \"Name\": \"Securia\",\n    \"Code\": 4338\n  },\n  {\n    \"Name\": \"Affluex\",\n    \"Code\": 8976\n  },\n  {\n    \"Name\": \"Enthaze\",\n    \"Code\": 8121\n  },\n  {\n    \"Name\": \"Eclipsent\",\n    \"Code\": 1334\n  },\n  {\n    \"Name\": \"Aquasseur\",\n    \"Code\": 2105\n  },\n  {\n    \"Name\": \"Enormo\",\n    \"Code\": 7771\n  },\n  {\n    \"Name\": \"Zolar\",\n    \"Code\": 7168\n  },\n  {\n    \"Name\": \"Columella\",\n    \"Code\": 1672\n  }\n]\n\nexport default {\n  typeData,\n  state,\n  event,\n  errors: {},\n  lastKnownEventId: \"e0e1b2a8-385e-4253-aebd-d4533e3d39c2\",\n  type: \"TypeEventWithState\",\n  fakeCompanies: fakeCompanies\n};\n","import bent from \"bent\";\nimport { v4 as uuid } from \"uuid\";\nimport { Subject } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\nconst clientId = uuid();\nconst tenantId = \"eda0ea26-6167-4cdb-9db4-1394d7fa2dbd\";\nconst subsystem = \"contract\";\nconst frontendSubsystem = \"portal\";\nconst host = \"http://localhost:8000\";\nconst correlationBase = clientId.substring(0, 8);\n\nconst correlationFactory = () => {\n  var messageId = 1;\n  return () => correlationBase + \":\" + messageId++;\n};\nexport const getCorrelationId = correlationFactory();\n\nexport const startProcess = (processName: string, correlationId: string) => {\n  const startProcess = {\n    type: `spl://${subsystem}/${tenantId}/${processName}`,\n  };\n  return sendCommand(subsystem, \"start-process\", startProcess, correlationId);\n};\n\nexport const executeAction = (\n  instanceUri: string,\n  actionName: string,\n  correlationId: string\n) => {\n  const executeAction = {\n    instance: instanceUri,\n    actionName,\n  };\n  return sendCommand(subsystem, \"execute-action\", executeAction, correlationId);\n};\n\nexport const updateProcess = (\n  instanceUri: string,\n  propertyPath: string,\n  value: obj,\n  currentEventId: string,\n  correlationId: string\n) => {\n  const updateProcess = {\n    action: \"update\",\n    currentEventId,\n    instance: instanceUri,\n    property: propertyPath,\n    value: value,\n  };\n  return sendCommand(subsystem, \"update-process\", updateProcess, correlationId);\n};\n\ntype obj = {\n  [key: string]: any;\n  [key: number]: any;\n};\n\ntype eventMessage = {\n  lastKnownEventId: string;\n  type: string;\n  typeData: obj;\n  event: { origin: string; initiator: { correlationId: string } };\n};\n\nexport const sendCommand = (\n  subsystem: string,\n  commandName: string,\n  payload: obj,\n  correlationId: string\n) => {\n  console.log(commandName);\n\n  const request = bent(\n    \"POST\",\n    `${host}/${subsystem}/${tenantId}/command/${commandName}`,\n    \"string\",\n    202\n  );\n\n  request(`?clientId=${clientId}&correlationId=${correlationId}`, payload);\n  return messageSubject.pipe(\n    filter((message) => message.event.initiator.correlationId === correlationId)\n  );\n};\n\nconst messageSubject = new Subject<eventMessage>();\ntype messageResponse = { lastSequenceNumber: number; messages: eventMessage[] };\n\nexport async function getMessages(last: number) {\n  console.log(\"polling for messages, last seen: \" + last);\n  const request = bent(\n    \"GET\",\n    `${host}/${frontendSubsystem}/${tenantId}/messages`,\n    \"json\",\n    200\n  );\n  var lastError = false;\n  var lastReceived = await request(`?clientId=${clientId}&last=${last}`).then(\n    (r) => {\n      const response = r as messageResponse;\n      lastError = false;\n      response.messages.forEach((message: eventMessage) => {\n        messageSubject.next(message);\n      });\n      return response.lastSequenceNumber;\n    },\n    (err) => {\n      lastError = true;\n      if (err.statusCode !== 503 && err.statusCode !== 504) {\n        console.error(JSON.stringify(err));\n      } else {\n        lastError = false;\n      }\n      return last;\n    }\n  );\n  setTimeout(getMessages, lastError ? 1000 * 30 : 10, lastReceived);\n}\n\nexport const initSplatComms = () => {\n  getMessages(0);\n  sendCommand(frontendSubsystem, \"hello-server\", {}, getCorrelationId());\n};\n\nexport default {\n  initSplatComms,\n  startProcess,\n  getMessages,\n  getCorrelationId,\n};\n","import {\n  startProcess,\n  getCorrelationId,\n  updateProcess,\n  executeAction,\n} from \"../lib/splatComms\";\n\nexport const logger = (next) => (action) => {\n  //console.log(\"dispatching\", action);\n  let result = next(action);\n  return result;\n};\n\n// note that the component might no longer be mounted when this callback is fired...\n// see https://github.com/rauldeheer/use-async-effect\nexport const updateState = (\n  next,\n  setLocalState,\n  source,\n  tewsCallback = () => {}\n) => (msg) => {\n  //console.log(`from ${source} subscription: `, msg);\n  if (msg.type === \"TypeEventWithState\") {\n    setLocalState({\n      lastKnownEventId: msg.lastKnownEventId,\n      instanceUri: msg.event.origin,\n    });\n    tewsCallback(msg);\n    next({ type: \"set-process-state\", state: msg.state });\n  }\n};\n\nexport const splatBackendReducer = (\n  next,\n  localState,\n  setLocalState,\n  setProcessType\n) => {\n  return (action) => {\n    console.log(\"updateBackend\", action, localState);\n    switch (action.type) {\n      case \"start-process\":\n        const startCorrelationId = getCorrelationId();\n        startProcess(action.name, startCorrelationId).subscribe(\n          updateState(next, setLocalState, \"startProcess\", (msg) =>\n            setProcessType({ name: action.name, typeData: msg.typeData })\n          )\n        );\n        return;\n      case \"invoke-action\":\n        const actionCorrelationId = getCorrelationId();\n        executeAction(\n          localState.instanceUri,\n          action.name,\n          actionCorrelationId\n        ).subscribe(updateState(next, setLocalState, \"executeAction\"));\n        break;\n      case \"update\":\n        const correlationId = getCorrelationId();\n        updateProcess(\n          localState.instanceUri,\n          action.path,\n          action.value,\n          localState.lastKnownEventId,\n          correlationId\n        ).subscribe(updateState(next, setLocalState, \"updateProcess\"));\n        break;\n      default:\n        break;\n    }\n    // optimistically update local process state,\n    // in the hope that the server will later agree\n    // (and if not, it will overwrite with the correct state)\n    return next(action);\n  };\n};\n","import React from \"react\"\nimport clsx from \"clsx\"\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport { hexError } from \"../../Styles/vars\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    padding: theme.spacing(3.5, 4.5),\n    height: 'auto',\n    transition: 'padding 150ms cubic-bezier(0.4, 0, 0.2, 1)'\n  },\n  rootValid: {\n    padding: theme.spacing(1, 4.5, 1, 4.5),\n  },\n  label: {\n    display: 'block',\n    marginBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(.5),\n    fontSize: '.8rem',\n    lineHeight: '1rem',\n    fontWeight: theme.typography.fontWeightMedium,\n    letterSpacing: theme.typography.pxToRem(.25),\n    transition: 'color 150ms ease-in-out',\n\n    '& + $hint': {\n      marginTop: -theme.spacing(.5)\n    }\n  },\n  labelErr: {\n    color: hexError\n  },\n  labelValid: {\n    color: theme.palette.text.disabled\n  },\n  hint: {\n    display: 'block',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: theme.typography.pxToRem(16), \n    color: theme.palette.text.hint,\n    paddingLeft: theme.spacing(.5),\n    marginBottom: theme.spacing(1.5),\n    letterSpacing: theme.typography.pxToRem(.5),\n  }\n}));\n\nexport default function SirField(props) {\n  const { label, hint, children, className, error, valid } = props;\n  const theme = useTheme();\n  const classes = useStyles(theme);\n\n  return (\n    <div className={clsx(classes.root, className, {[classes.rootValid]: !error && valid})}>\n      <label className={clsx(classes.label, {[classes.labelErr]: error, [classes.labelValid]: !error && valid})}>{label}</label>\n      { hint ? <span className={classes.hint}>{hint}</span> : null }\n      {children}\n    </div>\n  );\n}","import React from 'react'\nimport clsx from 'clsx'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n  }\n}))\n\nexport default function SirTextField(props) {\n  const { inputRef, className, ...other } = props\n  const classes = useStyles()\n\n  return (\n    <TextField\n      className={clsx(classes.root, className)}\n      variant='outlined'\n      InputLabelProps={{ shrink: true }}\n      fullWidth\n      hiddenLabel\n      inputRef={inputRef} // must be explicitly set for focus() to work\n      {...other}\n    />\n  )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport CheckIcon from '@material-ui/icons/Check'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { hexValid } from '../../Styles/vars'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  item: {\n    display: 'inline-flex',\n    borderRadius: 3,\n    // backgroundColor: '#f8faf3',\n    backgroundColor: 'rgba(0,0,0,.01)',\n    border: 'solid 1px rgba(0,0,0,.06)',\n    margin: theme.spacing(0, 2, 0, 0),\n\n    '& .MuiListItemText-root .MuiListItemText-primary': {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n\n    '&:hover': {\n      // backgroundColor: '#f2f5e6',\n      '& $editIcon': {\n        opacity: 1\n      }\n    }\n  },\n  validIcon: {\n    color: hexValid\n  },\n  editIcon: {\n    opacity: 0,\n    color: 'rgba(0,0,0,.24)',\n    transition: 'opacity 200ms cubic-bezier(0.4, 0, 0.2, 1)'\n  }\n}))\n\nexport default function SirReadOnlyField(props) {\n  const { value, onClick, hideValidationIcon, ...other } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <ListItem dense button className={classes.item} onClick={onClick} {...other}>\n        <ListItemText primary={value} />\n        <EditIcon className={classes.editIcon} fontSize='small' />\n      </ListItem>\n      {!hideValidationIcon && <CheckIcon className={classes.validIcon} fontSize='small' />}\n    </div>\n  )\n}\n","export const SPLATFIELD = {\n  BROKER: 'process_Broker',\n  BUSINESSTITLE: 'process_BusinessLayer.BusinessTitle',\n  CURRENCY: 'process_MainCurrency',\n  INSURED: 'process_Insured',\n  INSUREDPERIOD_FROM: 'process_StartDate',\n  INSUREDPERDIOD_TO: 'process_EndDate',\n  ISCOINSURANCE: 'process_IsCoinsurance',\n  LIFECYCLESTATUS: 'process_LifeCycleStatus',\n  MAINCLASSOFBUSINESS: 'process_MainClassOfBusiness',\n  NROFBUSINESSES: 'NrOfBusinessesToCreate',\n  REINSURER: 'process_Reinsurer',\n  REPORTINGUNIT: 'process_ReportingUnit',\n  TYPEOFBUSINESS: 'process_TypeOfBusiness',\n  TYPEOFPARTICIPATION: 'process_TypeOfParticipation'\n}","import React, { useState, useEffect, useRef } from 'react'\nimport _ from 'lodash'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useSplatField } from '@splat/splat-react'\nimport SirField from '../common/SirField'\nimport SirTextField from '../common/SirTextField'\nimport SirReadOnlyField from '../common/SirReadOnlyField'\nimport { hexError } from '../../Styles/vars'\nimport { SPLATFIELD } from './splat/vars'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormHelperText-contained': {\n      textAlign: 'right',\n      marginRight: theme.spacing(.5),\n      color: 'rgba(0,0,0,.24)',\n      fontSize: '12px',\n      lineHeight: '14px',\n\n      '& span:first-child': {\n        color: 'rgba(0,0,0,.6)'\n      }\n    },\n\n    '& .MuiOutlinedInput-root.Mui-error .MuiOutlinedInput-notchedOutline': {\n      borderColor: hexError\n    }\n  }\n}))\n\nexport default function BusinessTitle(props) {\n  const { maxLength = 40 } = props\n  const label = \"Business title\";\n  const classes = useStyles()\n  const [value, setValue] = useSplatField(SPLATFIELD.BUSINESSTITLE)\n  const [count, setCount] = useState(0)\n  const [err, setErr] = useState(false)\n  const hasValue = !_.isEmpty(value)\n  const [open, setOpen] = useState(!hasValue)\n  const inputRef = useRef(null)\n  const renderValue = value || ''\n\n  const handleOnChange = (e) => {\n    e.target.value.length === 0 ? setErr(true) : setErr(false)\n    setValue(e.target.value)\n  }\n\n  const handleOnBlur = (e) => {\n    if (e.target.value.length === 0) {\n      setErr(true)\n      setOpen(true)\n    } else {\n      setErr(false)\n      setOpen(false)\n    }\n  }\n\n  const handleOnKeyDown = (e) => {\n    if ((e.key === 'Enter' || e.key === 'Escape') && e.target.value.length > 0) {\n      setValue(e.target.value)\n      setErr(false)\n      setOpen(false)\n    }\n  }\n\n  useEffect(() => {\n    setCount(value.length)\n  }, [value])\n\n  useEffect(() => {\n    if (open && inputRef.current) {\n      inputRef.current.focus()\n      inputRef.current.select()\n    }\n  }, [open])\n\n  return (    \n    <SirField label={label} className={classes.root} error={err} valid={!open}>\n      {!open ?\n        <SirReadOnlyField value={renderValue} onClick={() => setOpen(!open)} /> :\n        <SirTextField\n          error={err}\n          value={renderValue}\n          onChange={handleOnChange}\n          onBlur={handleOnBlur}\n          onKeyDown={handleOnKeyDown}\n          inputProps={{ maxLength: maxLength }}\n          inputRef={inputRef}\n          helperText={<><span>{count}</span> / <span>{maxLength}</span></>}\n        />\n      }\n    </SirField>\n  )\n}\n","import React from 'react'\nimport _ from 'lodash'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { pxFieldHeight, bgColor, hexSecondary, brdColor, bgColorHover } from '../../Styles/vars'\nimport SirReadOnlyField from './SirReadOnlyField'\n\n// in px\nconst pxItemMargin = 4\nconst itemHeight = pxFieldHeight + 2 * pxItemMargin \n\nexport const useStyles = makeStyles((theme) => ({\n  group: {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    padding: 0,\n    margin: -theme.spacing(.5)\n  },\n  item: {\n    display: 'inline-flex',\n    width: `calc(50% - ${theme.spacing(.5)}px)`,\n    borderRadius: 3,\n    border: 'solid 1px rgba(0,0,0,.06)',\n    margin: theme.spacing(.5),\n    transition: 'border-color 200ms cubic-bezier(0.4, 0, 0.2, 1)',\n\n    '&:hover': {\n      borderColor: 'rgba(0,0,0,.38)'\n    },\n\n    '& .MuiListItemText-root .MuiListItemText-primary': {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n\n    '& .MuiSvgIcon-root': {\n      opacity: 0,\n      transition: 'opacity 200ms cubic-bezier(0.4, 0, 0.2, 1)'\n    }\n  },\n  validIcon: {\n    opacity: 0,\n    color: hexSecondary,\n  },\n  selected: {\n    backgroundColor: bgColor,\n    color: hexSecondary,\n    borderColor: brdColor,\n    '&:hover': {\n      backgroundColor: bgColorHover,\n    },\n    '& $validIcon': {\n      opacity: 1\n    }\n  },\n}));\n\nexport default function SirListGroup(props) {\n  const { data, value, setValue, open, setOpen, hideValidationIcon } = props\n  const classes = useStyles()\n  const amount = data.length\n  const maxGroupHeight = itemHeight * (amount + amount % 2) / 2\n\n  const handleChange = (code) => {\n    const selected = _.head(_.filter(\n      data,\n      (item) => item.Code === code\n    ))\n    setValue(selected)\n    setOpen(!open)\n  }\n  const renderValue = (vlu) => vlu || '(None)'\n\n  return (\n    !open ?\n      <SirReadOnlyField value={renderValue(value.Name)} onClick={setOpen} hideValidationIcon={hideValidationIcon} /> : \n      <List\n        className={classes.group}\n        style={{ maxHeight: maxGroupHeight }}\n      >\n        {_.map(\n          _.orderBy(data, 'Name'),\n          function (el) {\n            return (\n              <ListItem dense button className={clsx(classes.item, { [classes.selected]: el.Code === value.Code })} key={el.Code} onClick={() => handleChange(el.Code)}>\n                <ListItemText primary={renderValue(el.Name)} />\n                {/*<CheckIcon className={classes.validIcon} fontSize='small' />*/}\n              </ListItem>\n            );\n          }\n        )}\n      </List>\n  )\n}","import React from \"react\"\nimport clsx from \"clsx\"\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    margin: 0,\n    padding: 0,\n  },\n  brd_none: {},\n  brd_top: {\n    borderTop: 'solid 1px rgba(0,0,0,.06)'\n  }\n}))\n\nexport default function Section(props) {\n  const { border = 'none', className, ...other } = props\n  const classes = useStyles()\n\n  return (\n    <div className={clsx(classes.root, className, classes['brd_' + border])} {...other} />\n  )\n}","import React from \"react\"\nimport Switch from \"@material-ui/core/Switch\"\nimport { useSplatField } from \"@splat/splat-react\"\nimport SirField from \"../common/SirField\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport {SPLATFIELD} from './splat/vars'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1, 4.5, 0, 2)\n  },\n  switch: {\n    marginTop: theme.spacing(.5),\n    marginBottom: theme.spacing(2.25)\n  }\n}));\n\nexport default function IsCoinsurance(props) {\n  const [value, setValue] = useSplatField(SPLATFIELD.ISCOINSURANCE)\n  const classes = useStyles()\n\n  return (\n    <SirField label={\"Is coinsurance\"} className={classes.root} valid>\n      <Switch \n        size='small' \n        className={classes.switch}\n        checked={value} \n        onChange={() => setValue(!value)} \n      />\n    </SirField>\n  )\n}\n","import React, {useState, useEffect} from \"react\"\nimport _ from \"lodash\"\nimport { useSplatField } from \"@splat/splat-react\"\nimport { useSplatProcessState } from \"@splat/splat-react\"\nimport SirField from \"../common/SirField\"\nimport SirListGroup from \"../common/SirListGroup\"\nimport {SPLATFIELD} from './splat/vars'\n\nexport default function TypeOfParticipation(props) {\n  const label = 'Type of participation method'\n  const processState = useSplatProcessState()\n  const [value, setValue] = useSplatField(SPLATFIELD.TYPEOFPARTICIPATION)\n  const hasValue = !_.isEmpty(value)\n  const typeOfBusiness = processState.process_TypeOfBusiness\n  const typeOfParticipationCodes = typeOfBusiness.TypeOfParticipationCodes || []\n  const typeOfParticipationOptions = processState.TypeOfParticipationOptions\n  const typeOfParticipationOptionsFiltered = _.filter(typeOfParticipationOptions,\n    (item) => _.includes(typeOfParticipationCodes, item.Code)\n  )\n  const [open, setOpen] = useState(!hasValue)\n  const editMode = open && hasValue\n  const untouched = open && !hasValue\n\n  // needed for when type-of-business is reset\n  useEffect(() => {\n    if (!hasValue)\n      setOpen(true)\n  }, [value])\n\n  return (\n    <SirField label={label} valid={!open} hint={untouched ? 'Select an option' : (editMode ? 'Select to close' : null)}>\n      <SirListGroup value={value} setValue={setValue} data={typeOfParticipationOptionsFiltered} open={open} setOpen={setOpen} />\n    </SirField>\n  );\n}\n","import React, { useState } from 'react'\nimport _ from 'lodash'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SirField from '../common/SirField'\nimport { useSplatField } from '@splat/splat-react'\nimport { useSplatProcessState } from '@splat/splat-react'\nimport SirListGroup from '../common/SirListGroup'\nimport Section from '../common/Section'\nimport IsCoinsurance from './IsCoinsurance'\nimport TypeOfParticipation from './TypeOfParticipation'\nimport {SPLATFIELD} from './splat/vars'\nimport { hexValid } from '../../Styles/vars'\nimport CheckIcon from '@material-ui/icons/Check'\n\nexport const useStyles = makeStyles((theme) => ({\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: `calc(100% - ${theme.spacing(4.5)}px)`\n  },\n  formRow: {\n    flex: 1,\n    paddingRight: 0\n  },\n  validIcon: {\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(3),\n    color: hexValid\n  },\n}));\n\nexport default function TypeOfBusiness(props) {\n  const label = 'Type of business'\n  const processState = useSplatProcessState()\n  const classes = useStyles()\n  const [value, setValue] = useSplatField(SPLATFIELD.TYPEOFBUSINESS)\n  const [valueParticipation, setValueParticipation] = useSplatField(SPLATFIELD.TYPEOFPARTICIPATION)\n  const hasValue = !_.isEmpty(value)\n  const [open, setOpen] = useState(!hasValue)\n  const typeOfBusinessOptions = processState.TypeOfBusinessOptions\n  const hasCoinsurance = hasValue && (value.Code === 'DIRECT' || value.Code === 'NONPROPDIR')\n  const callbackSetValue = newValue => {\n    if (newValue !== value) {\n      setValueParticipation({})\n      setValue(newValue)\n    }\n  }\n  const editMode = open && hasValue\n  const untouched = open && !hasValue\n  const hasCoinsuranceClosed = hasCoinsurance && !open\n\n  return (\n    <>\n      <Section className={clsx({ [classes.section]: hasCoinsuranceClosed })}>\n        <SirField \n          label={label} \n          className={clsx({ [classes.formRow]: hasCoinsuranceClosed })} \n          hint={untouched ? 'Select an option' : (editMode ? 'Select to close' : null)}\n          valid={!open}\n          edit={hasValue && open}\n        >\n          <SirListGroup value={value} setValue={callbackSetValue} data={typeOfBusinessOptions} open={open} setOpen={setOpen} hideValidationIcon={hasCoinsuranceClosed} />\n        </SirField>\n        { hasCoinsuranceClosed ? \n          <>\n            <IsCoinsurance />\n            <CheckIcon className={classes.validIcon} fontSize='small' />\n          </> : \n          null}\n      </Section>\n      {hasValue && <TypeOfParticipation />}\n    </>\n  );\n}\n","export const msSleepDefautl = 100\n\nexport function sleep(ms = msSleepDefautl) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import React, { useState, useEffect, useRef } from \"react\"\nimport clsx from 'clsx'\nimport _ from \"lodash\"\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { useSplatProcessState } from \"@splat/splat-react\"\nimport { useSplatField } from \"@splat/splat-react\"\nimport SirField from \"../common/SirField\"\nimport SirTextField from \"../common/SirTextField\"\nimport SirReadOnlyField from '../common/SirReadOnlyField'\nimport {SPLATFIELD} from './splat/vars'\nimport { sleep } from '../../utils/utils'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  reinsurer: {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: 1.43,\n    fontSize: '12px',\n    padding: theme.spacing(2, 1, 1, 1)\n  },\n  reinsurerCode: {\n    fontWeight: 400,\n    color: 'rgba(0,0,0,.38)',\n    marginRight: theme.spacing(1)\n  },\n  reinsurerName: {\n    flex: 1,\n  },\n  reinsurerAmount: {\n    fontWeight: 400,\n    color: 'rgba(0,0,0,.24)'\n  },\n  option: {\n    fontSize: theme.typography.pxToRem(14)\n  },\n  optionName: {},\n  optionCode: {\n    marginLeft: theme.spacing(1),\n    color: 'rgba(0,0,0,.38)'\n  },\n}))\n\nexport default function ReportingUnit(props) {\n  const label = \"Reporting unit\"\n  const theme = useTheme()\n  const classes = useStyles(theme)\n  const [value, setValue] = useSplatField(SPLATFIELD.REPORTINGUNIT)\n  const hasValue = !_.isEmpty(value)\n  const processState = useSplatProcessState()\n  const ruOptions = processState.ReportingUnitOptions     // Name, Code, (add Reinsurer {Name, Code})\n  const reinsurerOptions = processState.ReinsurerOptions  // Name, Code, ReportingUnitCodes\n  \n  const [err, setErr] = useState(false)                   // since this is a required field\n  const [open, setOpen] = useState(!hasValue)             // if there is a value close ...otherwise keep field open for input\n  const [valid, setValid] = useState(!open)               // use to set presentation of wrapper\n  const [inputValue, setInputValue] = useState('')        // has an impact on the input.select() - if it is not set the value is not selected in field\n  const [touched, setTouched] = useState(hasValue)        // set touched if value is present from back-end - needed to not \n  const inputRef = useRef(null)\n\n  // might be solved on server ..\n  const addReinsurer = (option) => {\n    const matchedReinsurer = _.head(\n      _.filter(reinsurerOptions, (item) =>\n        _.includes(item.ReportingUnitCodes, option.Code)\n      )\n    )\n    const reinsurer = !_.isEmpty(matchedReinsurer)\n      ? { Name: matchedReinsurer.Name, Code: matchedReinsurer.Code }\n      : { Name: \"Missing reinsurer\", Code: \"\" }\n\n    return {\n      reinsurer: reinsurer,\n      ...option,\n    }\n  }\n\n  // might be already sorted ..\n  const options = _.sortBy(\n    _.map(ruOptions, option => addReinsurer(option)),\n    [(item) => item.reinsurer.Name]\n  )\n\n  const filterOptions = createFilterOptions({\n    stringify: (option) =>\n      option.reinsurer.Code + ' ' + option.reinsurer.Name + ' ' + option.Name + ' ' + option.Code,\n  })\n\n  // data for group\n  const handleGroupBy = option => option.reinsurer.Name + ';' + option.reinsurer.Code\n\n  // rendered group\n  const handleRenderGroup = (props) => { // TODO: needed if to add some styling to subheader or other values\n    const { key, group, children } = props\n    const reinsurer = group.split(';') // TODO: might be nice with a not so hacky solution\n    return <li key={key}>\n      <ListSubheader className={clsx(classes.reinsurer, 'MuiAutocomplete-groupLabel')} component='div'>\n        <span className={classes.reinsurerCode}>{_.tail(reinsurer)}</span>\n        <span className={classes.reinsurerName}>{_.head(reinsurer)}</span>\n        <span className={classes.reinsurerAmount}>({children.length})</span>\n      </ListSubheader>\n      <ul className='MuiAutocomplete-groupUl'>\n        {_.map(children, child => <li key={child.key} {...child.props}>{child.props.children}</li>)}\n      </ul>\n    </li>\n  }\n \n  // string value for a given option. It's used to fill the input (and the list box options if renderOption is not provided).\n  // used for input display value\n  const handleGetOptionLabel = option => option && hasValue ? option.Name + ' (' + option.Code + ')' : ''\n\n  // determine if option is selected\n  const handleGetOptionSelected = option => option && hasValue ? option.Code === value.Code : false \n  \n  // render option element in list\n  const handleRenderOption = option => \n    <div className={classes.option}>\n      <span>{option.Name}</span><span className={classes.optionCode}>({option.Code})</span>\n    </div>\n\n  const handleRenderInput = params => \n    <SirTextField\n      {...params}\n      inputRef={inputRef}\n      error={err}\n      placeholder={'Search...'}\n      onBlur={handleOnBlur}\n    />\n\n  const validateValue = React.useCallback(() => {\n    if (!_.isEmpty(value)) {\n      setValid(true)\n      setOpen(false)\n      setErr(false)\n    } else {\n      setOpen(true)\n      if (touched)\n        setErr(true)\n    }\n  }, [value, touched])\n\n  const handleOnBlur = (e) => {\n    if (!touched)\n      setTouched(true)\n\n    validateValue()\n  }\n\n  const handleOnChange = (event, value, reson) => {\n    // TODO: handle 'clear' differently if inputvalue does not match (?)\n    if (_.isObject(value) || _.isNull(value)) {\n      setValue(value)\n      _.isNull(value) ? setOpen(true) : setOpen(false)\n    }\n  }\n\n  // changes when the input value changes from user key input\n  // TODO: catch Enter and Escape (?)\n  const handleOnInputChange = (event, value, reson) => {\n    if (value.length === 0)\n      setErr(true)\n    else\n      setErr(false)\n    setInputValue(value)\n  }\n\n  // triggered when user clicks the read-only field\n  const handleOnClick = () => {\n    setValid(false)\n    sleep().then(() => setOpen(true))\n  }\n  \n  // used to decorate current set-up and will run only when there is no 'reinsurer' object on value\n  // TODO: might not be needed if this is set on back-end\n  useEffect(() => {\n    if (!_.isEmpty(value) && _.isEmpty(value.reinsurer)) {\n      setValue(addReinsurer(value));\n    } \n  }) //, []) <<-- exaustive error but should be set according to doc to run only once\n\n  // focus input value when ctrl is in edit mode\n  useEffect(() => {\n    const input = inputRef.current\n    if (hasValue && open && input) {\n      input.focus()\n      input.select()\n    }\n  }, [open])\n\n  // validate when value is changed\n  useEffect(() => {\n    validateValue()\n  }, [value, validateValue])\n  \n\n  return (\n    <SirField label={label} error={err} valid={valid}>\n      { !open ? \n        <SirReadOnlyField value={handleGetOptionLabel(value)} onClick={handleOnClick} /> :\n        <div className={classes.root}>\n          <Autocomplete\n            // TODO: autoHighlight\n            blurOnSelect  // has an effect .. explain why this is needed\n            openOnFocus\n\n            filterOptions={filterOptions}\n            options={options}\n            groupBy={handleGroupBy}\n            renderGroup={handleRenderGroup}\n            renderOption={handleRenderOption}\n            renderInput={handleRenderInput}\n            getOptionLabel={handleGetOptionLabel}\n            getOptionSelected={handleGetOptionSelected}\n            value={hasValue ? value : null}\n            onChange={handleOnChange}\n            inputValue={inputValue}\n            onInputChange={handleOnInputChange}\n          />\n        </div>\n      }\n    </SirField>\n  );\n}\n","import React, {useState} from 'react'\nimport _ from 'lodash'\nimport { useSplatProcessState } from '@splat/splat-react'\nimport { useSplatField } from '@splat/splat-react'\nimport SirField from '../common/SirField'\nimport SirListGroup from '../common/SirListGroup'\nimport {SPLATFIELD} from './splat/vars'\n\nexport default function LifeCycleStatus(props) {\n  const label = 'Life cycle status'\n  const processState = useSplatProcessState()\n  const [value, setValue] = useSplatField(SPLATFIELD.LIFECYCLESTATUS)\n  const hasValue = !_.isEmpty(value)\n  const lifeCycleStatusOptions = processState.LifeCycleStatusOptions\n  const [open, setOpen] = useState(true)\n  const editMode = open && hasValue\n  const untouched = open && !hasValue\n\n  return (\n    <SirField label={label} valid={!open} hint={untouched ? 'Select an option' : (editMode ? 'Select to close' : null)}>\n      <SirListGroup value={value} setValue={setValue} data={lifeCycleStatusOptions} open={open} setOpen={setOpen} />\n    </SirField>\n  );\n}\n","import React, {useState} from \"react\"\nimport _ from 'lodash'\nimport { useSplatField } from \"@splat/splat-react\"\nimport { useSplatProcessState } from \"@splat/splat-react\"\nimport SirField from \"../common/SirField\"\nimport SirListGroup from \"../common/SirListGroup\"\nimport {SPLATFIELD} from './splat/vars'\n\nexport default function MainClassOfBusiness(props) {\n  const label = 'Main class of business'\n  const processState = useSplatProcessState()\n  const [value, setValue] = useSplatField(SPLATFIELD.MAINCLASSOFBUSINESS)\n  const hasValue = !_.isEmpty(value)\n  const mainClassOfBusinessOptions = processState.MainClassOfBusinessOptions\n  const [open, setOpen] = useState(true)\n  const editMode = open && hasValue\n  const untouched = open && !hasValue\n\n  return (\n    <SirField label={label} valid={!open} hint={untouched ? 'Select an option' : (editMode ? 'Select to close' : null)}>\n      <SirListGroup value={value} setValue={setValue} data={mainClassOfBusinessOptions} open={open} setOpen={setOpen} />\n    </SirField>\n  );\n}\n","import React from 'react'\nimport _ from 'lodash'\nimport clsx from 'clsx'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport { hexSecondary, bgColor, brdColor, bgColorHover } from '../../Styles/vars'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    '& $selected': {\n      borderRightColor: brdColor,\n    }\n  },\n  btn: {},\n  selected: {\n    backgroundColor: bgColor,\n    color: hexSecondary,\n    borderColor: brdColor,\n    '&:hover': {\n      backgroundColor: bgColorHover,\n    }\n  }\n}));\n\nexport default function SirButtonGroup(props) {\n  const { data, value, callbackClick } = props\n  const classes = useStyles()\n  const isEmpty = _.isEmpty(value)\n\n  const commonButton = (item) =>\n    <Tooltip title={item.Alt ? item.Alt : ''} key={item.Code}>\n      <Button\n        className={clsx(classes.btn, { [classes.selected]: !isEmpty && item.Code === value.Code })}\n        onClick={() => callbackClick(item.Code)}\n      >\n        {item.Name}\n      </Button>\n    </Tooltip>\n  return (\n    <ButtonGroup className={classes.root}>\n      {_.map(data, item => commonButton(item))}\n    </ButtonGroup>\n  )\n}\n","import React from \"react\"\nimport clsx from 'clsx'\nimport _ from 'lodash'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { rgbSecondary, hexSecondary } from \"../../../Styles/vars\";\nimport { Tooltip, Link } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(2)\n  },\n  link: {\n    fontSize: '.825rem',\n    padding: theme.spacing(.5, 1),\n    borderRadius: theme.spacing(.5),\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  },\n  linkClear: {\n    color: 'rgba(0,0,0,.6)',\n    '&:hover': {\n      backgroundColor: 'rgba(0,0,0,.04)'\n    }\n  },\n  linkOk: {\n    color: hexSecondary,\n    fontWeight: 500,\n    '&:hover': {\n      backgroundColor: `rgba(${rgbSecondary}, .04)`\n    }\n  }\n}));\n\nexport default function CtrlActions(props) {\n  const { titleClear, titleOk, callbackClear, callbackOk, className } = props\n  const classes = useStyles()\n  return (\n    <span className={clsx(classes.root, className)}>\n        <Tooltip title={titleClear}>\n          <Link className={clsx(classes.link, classes.linkClear)} href='#' onClick={callbackClear}>Clear</Link>\n        </Tooltip>\n        <Tooltip title={titleOk}>\n          <Link className={clsx(classes.link, classes.linkOk)} href='#' onClick={callbackOk}>OK</Link>\n        </Tooltip>\n    </span>\n  );\n}\n","import React, { useState } from 'react'\nimport _ from 'lodash'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SirField from '../common/SirField'\nimport { useSplatField } from '@splat/splat-react'\nimport { useSplatProcessState } from '@splat/splat-react'\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete'\nimport SirTextField from '../common/SirTextField'\nimport SirReadOnlyField from '../common/SirReadOnlyField'\nimport SirButtonGroup from '../common/SirButtonGroup'\nimport {SPLATFIELD} from './splat/vars'\nimport CtrlActions from './ctrls/CtrlActions'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  autocomplete: {\n    marginLeft: theme.spacing(3),\n    flex: 1\n  },\n  option: {\n    fontSize: theme.typography.pxToRem(14)\n  }\n}));\n\nexport default function Currency(props) {\n  const label = 'Main currency'\n  const classes = useStyles();\n  \n  const [value, setValue] = useSplatField(SPLATFIELD.CURRENCY)\n  const hasValue = !_.isEmpty(value)\n  const [open, setOpen] = useState(!hasValue)\n\n  const processState = useSplatProcessState()\n  const mainCurrencyOptions = processState.MainCurrencyOptions\n  const commonCurrency = processState.CommonCurrency\n  const editMode = open && hasValue\n  const untouched = open && !hasValue\n\n  const filterOptions = createFilterOptions({ stringify: (option) => option.Name + ' ' + option.Code })\n  const handleRenderInput = params => <SirTextField {...params} placeholder='Search...' />\n  const handleGetOptionLabel = option => hasValue ? option.Code : ''\n  const handleGetOptionSelected = option => option && hasValue ? option.Code === value.Code : false\n  const handleRenderOption = option => <div className={classes.option}>{option.Code}</div>\n  const handleOpen = () => setOpen(!open)\n  const handleAutocompleteChange = (event, value, reson) => {\n    setValue(value)\n    _.isEmpty(value) ? setOpen(true) : handleOpen()\n  }\n  const handleOnClick = (currency) => {\n    setValue({Code: currency})\n    handleOpen()\n  }\n  \n  \n  return (\n    <SirField label={label} valid={!open} hint={untouched ? 'Select an option' : (editMode ? 'Select to close' : null)}>\n      {!open ?\n        <SirReadOnlyField value={value.Code || ''} onClick={handleOpen} /> :\n        <div className={classes.root}>\n          <SirButtonGroup data={commonCurrency} value={value} callbackClick={handleOnClick} />\n          <Autocomplete\n            // TODO: autoHighlight\n            className={classes.autocomplete}\n            openOnFocus\n\n            filterOptions={filterOptions}\n            options={mainCurrencyOptions}\n            renderInput={handleRenderInput}\n            renderOption={handleRenderOption}\n            getOptionLabel={handleGetOptionLabel}\n            getOptionSelected={handleGetOptionSelected}\n            onChange={handleAutocompleteChange}\n            value={hasValue ? value : null}\n          />\n          { editMode &&             \n            <CtrlActions\n              titleClear='Clear currency and start over' \n              callbackClear={() => setValue({})} \n              titleOk='Close edit mode' \n              callbackOk={() => setOpen(false)} \n            /> \n          }\n        </div>\n      }\n    </SirField>\n  );\n}\n","import React from \"react\"\nimport clsx from 'clsx'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { DesktopDatePicker, LocalizationProvider } from \"@material-ui/pickers\"\nimport MomentUtils from '@material-ui/pickers/adapter/moment'\nimport SirTextField from './SirTextField'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    maxWidth: theme.spacing(18),\n    position: 'relative',\n\n    '& .MuiInputAdornment-positionEnd': {\n      position: 'absolute',\n      right: theme.spacing(1),\n      transform: 'scale(.85)',\n      opacity: .6,\n      '&:hover': {\n        opacity: 1\n      }\n    }\n  },\n  fullWidth: {\n    maxWidth: 'unset'\n  }\n}));\n\n// common ctrl depends on parent control to bind\nexport default function SirDatePicker(props) {\n  const { \n    inputRef,\n    error, \n    onEnter,\n    fullWidth = false, \n    placeholder,\n    value, \n    onChange, \n    onAccept\n  } = props\n  const classes = useStyles()\n\n  const handleOnKeyDown = (e) => {\n    if ((e.key === 'Enter' || e.key === 'Escape') && e.target.value.length > 0)\n      onEnter(e.target.value)    \n  }\n\n  const renderInput = ({ ref, inputProps, InputProps }) => (\n    <div className={clsx(classes.root, {[classes.fullWidth] : fullWidth})} ref={ref}>\n      <SirTextField\n        inputRef={inputRef} // used to set focus from parent\n        error={error}\n        onKeyDown={handleOnKeyDown}\n        {...inputProps}\n      />\n      {InputProps?.endAdornment}\n    </div>\n  )\n\n  return (    \n    <LocalizationProvider dateAdapter={MomentUtils}>      \n      <DesktopDatePicker\n        autoOk\n        inputFormat='YYYY-MM-DD'\n        mask='____-__-__'\n        renderInput={props => renderInput(props)}\n        value={value}\n        onChange={onChange}\n        onAccept={onAccept}\n        inputProps={placeholder ? { placeholder: placeholder } : null}\n      />\n    </LocalizationProvider>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport _ from 'lodash'\nimport clsx from 'clsx'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport SirField from '../common/SirField'\nimport SirButtonGroup from '../common/SirButtonGroup'\nimport SirReadOnlyField from '../common/SirReadOnlyField'\nimport SirDatePicker from '../common/SirDatePicker'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport LockIcon from '@material-ui/icons/Lock'\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport NoEncryptionIcon from '@material-ui/icons/NoEncryption';\nimport EditIcon from '@material-ui/icons/Edit'\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport { hexSecondary, rgbSecondary, bgColorHover } from '../../Styles/vars'\nimport CtrlActions from './ctrls/CtrlActions'\n\nexport const useStyles = makeStyles((theme) => ({\n  unselected: {\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    justifyContent: 'space-between',\n    width: '100%'\n  },\n  viewMode: {\n    display: 'flex',\n    alignItems: 'center',\n    flex: 1,\n    width: '100%'\n  },\n  from: {\n\n  },\n  separator: {\n    color: 'rgba(0,0,0,.38)',\n    margin: theme.spacing(0, 1)\n  },\n  to: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'rgba(0,0,0,.38)',\n  },\n  toUnlocked: {\n    color: 'rgba(0,0,0,.87)',\n  },\n\n  duration: {\n    color: 'rgba(0,0,0,.24)',\n    marginLeft: theme.spacing(1),\n    fontSize: '.825rem',\n  },\n  lockIcon: {\n    color: 'rgba(0,0,0,.24)',\n    fontSize: '.925rem',\n    marginLeft: theme.spacing(.5)\n  },\n  editActions: {\n    flex: 1,\n    textAlign: 'right',\n    marginRight: -theme.spacing(1)\n  },\n  linkTo: {\n    color: 'rgba(0,0,0,.38)',\n    padding: theme.spacing(.5,0),\n  \n    '&:hover': {\n      textDecoration: 'none',\n      borderBottom: 'dashed 1px rgba(0,0,0,.12)'\n    }\n  }\n}));\n\nconst componentMode = {\n  UNSELECTED: 'unselected',\n  VIEW: 'view',\n  EDIT: 'edit'\n}\n\nconst commonDates = [\n  {\n    Name: 'SEP',\n    Code: '2020-09-01',\n    Alt: '1st Sep 2020'\n  },\n  {\n    Name: 'OCT',\n    Code: '2020-10-01',\n    Alt: '1st Oct 2020'\n  },\n  {\n    Name: 'NOV',\n    Code: '2020-11-01',\n    Alt: '1st Nov 2020'\n  },\n  {\n    Name: 'DEC',\n    Code: '2020-12-01',\n    Alt: '1st Dec 2020'\n  },\n  {\n    Name: 'JAN',\n    Code: '2021-01-01',\n    Alt: '1st Jan 2021'\n  },\n]\n\nconst format = 'YYYY-MM-DD'                                                 // TODO: format based on local\nconst displayFormat = 'Do MMM YYYY'\nconst isDateValid = (date) => moment(date, format, true).isValid()\n\nexport default function InsuredPeriod(props) {\n  const { lockTo } = props\n  const label = 'Insured period'\n  const classes = useStyles()\n\n  const [mode, setMode] = useState(componentMode.UNSELECTED)\n  const [from, setFrom] = useState(new Date())\n  const [to, setTo] = useState(null)\n  const [duration, setDuration] = useState(null)\n  const [errorFrom, setErrorFrom] = useState(false)\n  const [errorTo, setErrorTo] = useState(false)\n  const [locked, setLocked] = React.useState(true)\n  const fromRef = useRef(null)\n  const toRef = useRef(null)\n\n  const setViewMode = () => {\n    setMode(componentMode.VIEW)\n  }\n  const setEditMode = () => setMode(componentMode.EDIT)\n  const calcDuration = (fromDate, toDate) => fromDate && toDate && isDateValid(fromDate) && isDateValid(toDate) ? toDate.diff(fromDate, 'days') : null\n\n  const setInsuredPeriod = (fromDate, toDate = null, changeMode = true) => {\n    const from = isDateValid(fromDate) ? moment(fromDate) : null\n    const to = toDate && isDateValid(toDate) ? moment(toDate) : (isDateValid(fromDate) ? moment(fromDate).add(1, 'year').subtract(1, 'day') : null)\n    const duration = calcDuration(from, to)\n\n    setErrorFrom(false)\n    setFrom(from)\n    setTo(to)\n    setDuration(duration)\n    if (lockTo)\n      setLocked(false) // TODO: ...\n    if (changeMode)\n      setViewMode()\n  }\n\n  const handleSetFrom = (fromDate) => {\n    const from = isDateValid(fromDate) ? moment(fromDate) : null\n\n    setErrorFrom(false)\n    setFrom(from)\n    setDuration(calcDuration(from, to))\n  }\n\n  const handleSetTo = (toDate) => {\n    const to = isDateValid(toDate) ? moment(toDate) : null\n\n    setErrorTo(false)\n    setTo(to)\n    setDuration(calcDuration(from, to))\n    setViewMode()\n  }\n\n  const handleQuickSelect = (date) => setInsuredPeriod(date)\n\n  const handleOnEnterFrom = (date) => {\n    if (!errorFrom)\n      locked ? setInsuredPeriod(date) : handleSetFrom(date)\n  }\n\n  const handleOnChangeFrom = (date) => setErrorFrom(date && !date.isValid() || _.isNull(date))\n  const handleOnAcceptFrom = (date) => locked ? setInsuredPeriod(date) : handleSetFrom(date)\n  const handleOnEnterTo = (date) => {\n    if (!errorTo)\n      handleSetTo(date)\n  }\n  const handleOnChangeTo = (date) => setErrorTo(date && !date.isValid() || _.isNull(date))\n  const handleOnAcceptTo = (date) => handleSetTo(date)\n  const toggleLocked = () => {\n    if (!locked)\n      setInsuredPeriod(from, null, false)\n\n    setLocked(!locked)\n  }\n\n  const closeEditMode = () => {\n    setErrorFrom(false)\n    setErrorTo(false)\n    setViewMode()\n  }\n  const clearPeriod = () => {\n    setErrorFrom(false)\n    setErrorTo(false)\n    setFrom(null)\n    setTo(null)\n    setDuration(null)\n    setMode(componentMode.UNSELECTED)\n  }\n\n  // set focus on edit\n  useEffect(() => {\n    if (mode === componentMode.EDIT && fromRef.current) {\n      fromRef.current.focus()\n      fromRef.current.select()\n    }\n  }, [mode])\n\n  useEffect(() => {\n    if (mode === componentMode.EDIT && toRef.current) {\n      toRef.current.focus()\n      toRef.current.select()\n    }\n  }, [locked])\n\n  const renderDuration = () =>\n    <span className={classes.duration}>({duration === 364 ? '1 year' : duration + ' days'})</span>\n\n  const renderTo = (edit) =>\n    <>\n      <span className={clsx(classes.to, {[classes.toUnlocked]: !locked})}>\n        { !edit ? \n          to.format(displayFormat) : \n            locked ? \n            <Tooltip title='Edit end date'><Link className={classes.linkTo} href='#' onClick={toggleLocked}>{to.format(displayFormat)}</Link></Tooltip> : \n            <SirDatePicker\n              inputRef={toRef}\n              value={to}\n              error={errorTo}\n              onChange={handleOnChangeTo}\n              onAccept={handleOnAcceptTo}\n              onEnter={handleOnEnterTo}\n            />\n        }\n      </span>\n      {renderDuration()}\n    </>\n\n  const renderMode = (edit) => {\n    return (\n      <div className={classes.viewMode}>\n        {edit ?\n          <SirDatePicker\n            inputRef={fromRef}\n            value={from}\n            error={errorFrom}\n            onChange={handleOnChangeFrom}\n            onAccept={handleOnAcceptFrom}\n            onEnter={handleOnEnterFrom}\n          /> :\n          <span className={classes.from}>{from.format(displayFormat)}</span>\n        }\n        <span className={classes.separator}>&mdash;</span>\n        {renderTo(edit)}\n        { edit &&\n          <span className={classes.editActions}>\n            <CtrlActions \n              titleClear='Clear period and start over' \n              callbackClear={clearPeriod} \n              titleOk='Close edit mode' \n              callbackOk={closeEditMode} \n            />\n          </span>\n        }\n      </div>\n    )\n  }\n\n  const isUnselectedMode = mode === componentMode.UNSELECTED\n  const isViewMode = mode === componentMode.VIEW\n  const isEditMode = mode === componentMode.EDIT\n\n  return (\n    <SirField \n      error={errorFrom || errorTo}\n      valid={isViewMode}\n      label={label} \n      hint={\n        isUnselectedMode ? \n        'Select periods start date. The end date is initially set 1 year away.' : null\n        // (isEditMode ? 'Change default duration by selecting a custom end date.' : null)\n      }\n    >\n\n      {isUnselectedMode && // TODO: fix correct helper texts\n        <div className={classes.unselected}>\n          <SirButtonGroup\n            data={commonDates}\n            callbackClick={handleQuickSelect}\n          />\n          <SirDatePicker\n            placeholder={'Custom...'}\n            value={null}\n            error={errorFrom}\n            onChange={handleOnChangeFrom}\n            onAccept={handleOnAcceptFrom}\n            onEnter={handleOnEnterFrom}\n          />\n        </div>\n      }\n\n      {isViewMode &&\n        <SirReadOnlyField\n          value={renderMode()}\n          onClick={setEditMode}\n        />\n      }\n\n      {isEditMode && renderMode(true)}\n\n    </SirField>\n  )\n}\n\n\n","import React from 'react'\nimport _ from 'lodash'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    '&:before': {\n      content: 'unset'\n    },\n    '&.Mui-expanded': {\n      margin: 0\n    }\n  },\n  content: {\n    color: 'rgba(0,0,0,.24)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    textTransform: 'uppercase',\n    letterSpacing: theme.typography.pxToRem(.25)\n  },\n  details: {\n    flexDirection: 'column',\n    padding: 0\n  },\n  icon: {\n    marginLeft: theme.spacing(.5),\n    transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)'\n  },\n  iconRotated: {\n    transform: 'rotate(180deg)'\n  }\n}))\n\nexport default function SirExpansionPanel(props) {\n  const { children } = props\n  const classes = useStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  const handleChange = (event, newExpanded) => {\n    setExpanded(newExpanded);\n  }\n\n  return (\n    <ExpansionPanel elevation={0} onChange={handleChange} className={classes.root}>\n      <ExpansionPanelSummary classes={{ content: classes.content }}>\n        {expanded ? 'Less' : 'More'}\n        <ExpandMoreIcon className={clsx(classes.icon, { [classes.iconRotated]: expanded })} />\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.details}>\n        {children}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}","import React from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: '#ecf3f5',\n    borderRadius: 6,\n    margin: theme.spacing(0, 4, 2),\n    padding: theme.spacing(4),\n    color: 'rgba(0,0,0,.3)',\n    position: 'relative',\n    fontSize: '.8rem',\n    fontWeight: 600,\n    '&:before': {\n      position: 'absolute',\n      content: '\"\"',\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n      borderRadius: 3,\n      backgroundColor: '#ecf3f5',\n      left: '50%',\n      top: 0,\n      transform: 'translate(-50%, -25%) rotate(45deg)'\n    }\n  },\n}))\n\n\nexport default function SirMessage(props) {\n  const { children } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {children}\n    </div>\n  )\n}\n","import React from \"react\"\nimport _ from 'lodash'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useSplatField } from '@splat/splat-react'\nimport { SPLATFIELD } from '../splat/vars'\nimport SirMessage from \"../../common/SirMessage\"\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  enhanced: {\n    margin: theme.spacing(0, .5),\n    color: 'rgba(0,0,0,.42)'\n  }\n}))\n\nexport default function TypeOfBusinessPanel(props) {\n  const { children } = props\n  const classes = useStyles()\n  const [value, setValue] = useSplatField(SPLATFIELD.TYPEOFBUSINESS)\n  const hasValue = !_.isEmpty(value)\n  \n  return (\n    <div className={classes.root}>\n      {hasValue ? children :\n        <SirMessage>\n          Select <span className={classes.enhanced}>Type of business</span> to reveal more fields.\n        </SirMessage>\n      }\n    </div>\n  )\n}","import React, { useRef, useState, useEffect } from \"react\"\nimport _ from \"lodash\"\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SirReadOnlyField from '../common/SirReadOnlyField'\nimport SirTextField from \"./SirTextField\"\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  option: {\n    fontSize: theme.typography.pxToRem(14)\n  }\n}))\n\nexport default function SirAutocomplete(props) {\n  const { value, setValue, options, open, setOpen } = props\n  const classes = useStyles()\n  const inputRef = useRef(null)\n  const hasValue = !_.isEmpty(value)\n  const [inputValue, setInputValue] = useState('') // needed to select value when going from read-only to edit mode\n\n  const handleOnClick = () => setOpen(true)\n  const handleOnBlur = () => setOpen(!hasValue)\n  const handleOnChange = (event, value, reson) => setValue(value)\n  const handleOnInputChange = (event, value, reson) => setInputValue(value)\n  // TODO: select onEnter\n  // TODO: blur? onEscape\n\n  useEffect(() => {\n    const input = inputRef.current\n    if (open && hasValue && input) {\n      input.focus()\n      input.select()\n    }\n  }, [open])\n\n  return (\n    <>\n      { !open ? \n        <SirReadOnlyField value={value.Name || ''} onClick={handleOnClick} /> :\n        <div className={classes.root}>\n          <Autocomplete\n            // TODO: autoHighlight          \n            classes={{ option: classes.option }}\n            openOnFocus\n\n            options={options}\n            getOptionLabel={(option) => option ? option.Name : ''}\n            getOptionSelected={(option) => hasValue ? option.Name === value.Name : false}\n            renderInput={(params) => <SirTextField inputRef={inputRef} {...params} placeholder={'Search...'} onBlur={handleOnBlur} />} \n            value={hasValue ? value : null}\n            inputValue={inputValue}\n            onChange={handleOnChange}\n            onInputChange={handleOnInputChange}\n          />\n        </div>\n      }\n    </>\n  );\n}\n","import React, {useState} from \"react\"\nimport _ from 'lodash'\nimport SirField from \"../../common/SirField\"\nimport SirAutocomplete from \"../../common/SirAutocomplete\";\nimport { useSplatField } from \"@splat/splat-react\"\nimport { sleep } from '../../../utils/utils'\n\nexport default function Reinsurer(props) {\n  const { label, splatField, data } = props\n  const [value, setValue] = useSplatField(splatField)\n  const hasValue = !_.isEmpty(value)\n  const [open, setOpen] = useState(!hasValue)\n  const [valid, setValid] = useState(!open)\n\n  const callbackSetOpen = (value) => {\n    setValid(!value)\n    if (value)\n      sleep().then(() => setOpen(true)) // need to wait a bit in order for the menu to show at the correct place\n    else\n      setOpen(false)\n  }\n\n  const callbackSetValue = (value) => {\n    setValue(value)\n    setValid(value)\n    setOpen(!value)\n  }\n\n  return (\n    <SirField label={label} valid={valid}>\n      <SirAutocomplete value={value} setValue={callbackSetValue} options={data} open={open} setOpen={callbackSetOpen} />\n    </SirField>\n  )\n}\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    '&.MuiButton-contained': {\n      borderRadius: theme.spacing(6),\n      paddingLeft: theme.spacing(2.5),\n      paddingRight: theme.spacing(2.5)\n    },\n    '&.MuiButton-text': {\n      textTransform: 'unset'\n    }\n  }\n}))\n\nexport default function SirButton(props) {\n  const { children, ...other } = props\n  const classes = useStyles()\n  return (\n    <Button \n      className={classes.root} \n      disableElevation\n      {...other}\n    >{children}</Button>\n  )\n}","import React from \"react\"\nimport { useSplatField } from \"@splat/splat-react\"\nimport SirField from \"../common/SirField\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport {SPLATFIELD} from './splat/vars'\nimport IconButton from '@material-ui/core/IconButton'\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  value: {\n    minWidth: theme.typography.pxToRem(24),\n    textAlign: 'center'\n  },\n  iconButton: {\n    '&:hover': {\n      color: theme.palette.text.primary\n    }\n  }\n}));\n\nexport default function NrOfBusinesses(props) {\n  const [value, setValue] = useSplatField(SPLATFIELD.NROFBUSINESSES)\n  const classes = useStyles()\n  const min = 1, max = 10\n\n  const decrease = () => {\n    if (value > min)\n      setValue(value-1)\n  }\n  const increase = () => {\n    if (value < max)\n      setValue(value+1)\n  }\n\n  return (\n    <SirField label={\"Nr.of businesses\"} valid>\n      <div className={classes.root}>\n        <IconButton onClick={decrease} disabled={value <= min} className={classes.iconButton}>\n          <RemoveCircleOutlineIcon />\n        </IconButton>\n        <span className={classes.value}>{value}</span>\n        <IconButton onClick={increase} disabled={value >= max} className={classes.iconButton}>\n          <AddCircleOutlineIcon />\n        </IconButton>\n      </div>\n    </SirField>\n  )\n}\n","import React from \"react\"\nimport _ from 'lodash'\n// import clsx from 'clsx'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport BusinessTitle from \"../Components/quick-business/BusinessTitle\"\nimport TypeOfBusiness from \"../Components/quick-business/TypeOfBusiness\"\nimport ReportingUnit from \"../Components/quick-business/ReportingUnit\"\nimport Section from \"../Components/common/Section\"\nimport LifeCycleStatus from \"../Components/quick-business/LifeCycleStatus\"\nimport MainClassOfBusiness from \"../Components/quick-business/MainClassOfBusiness\"\nimport Currency from \"../Components/quick-business/Currency\"\nimport InsuredPeriod from \"../Components/quick-business/InsuredPeriod\"\nimport SirExpansionPanel from \"../Components/common/SirExpansionPanel\"\nimport TypeOfBusinessPanel from \"../Components/quick-business/ctrls/TypeOfBusinessPanel\"\nimport SirField from \"../Components/common/SirField\"\nimport SearchableField from \"../Components/quick-business/optional/SearchableField\"\nimport { useSplatProcessState } from '@splat/splat-react'\nimport SirButton from \"../Components/common/SirButton\"\nimport {SPLATFIELD} from '../Components/quick-business/splat/vars'\nimport SplatData from '../Data/Splat-data'\nimport NrOfBusinesses from '../Components/quick-business/NrOfBusinesses'\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    maxWidth: theme.spacing(68),\n    margin: `0 auto ${theme.spacing(6)}px`,\n    padding: theme.spacing(3, 0),\n    backgroundColor: theme.palette.background.paper\n  },\n  actions: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    '& > *': {\n      // marginRight: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function CreateQuickBusiness(props) {\n  const classes = useStyles()\n  const processState = useSplatProcessState()\n  // const brokers = processState.\n  \n  const isValid = false\n\n  return (\n    <div className={classes.root}>\n      <BusinessTitle />\n      <TypeOfBusiness />\n      <TypeOfBusinessPanel>\n        <ReportingUnit />\n        <InsuredPeriod />\n        <LifeCycleStatus />\n        <MainClassOfBusiness />\n        <Currency />\n\n        <SirExpansionPanel>\n          <NrOfBusinesses />\n          <SearchableField label='Broker' splatField={SPLATFIELD.BROKER} data={SplatData.fakeCompanies} />\n          <SearchableField label='Insurer' splatField={SPLATFIELD.INSURED} data={SplatData.fakeCompanies} />\n        </SirExpansionPanel>\n      </TypeOfBusinessPanel>\n\n      <Section border='top'>\n        <SirField>\n          <div className={classes.actions}>\n            <SirButton disabled={!isValid} variant='contained' color='primary' onClick={() => console.log(processState)}>Create</SirButton>\n            {/* <SirButton>Cancel</SirButton> */}\n          </div>\n        </SirField>\n      </Section>\n\n\n      {/*\n      <Section>\n        <Reinsurer />\n      </Section>\n      <DebugButton />\n\n      <FormRow>\n        <SplAction name=\"CreateBusiness\">\n          <Button label=\"Create Business\" />\n        </SplAction>\n        <SplAction name=\"Init\">\n          <Button label=\"Reset All\" />\n        </SplAction>\n        <SplAction name=\"GenerateDummyData\">\n          <Button label=\"Generate\" />\n        </SplAction>\n      </FormRow>\n      */}\n    </div>\n  )\n}\n","import React, {useRef, useState} from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Section from \"../Components/common/Section\"\nimport SirDatePicker from \"../Components/common/SirDatePicker\";\nimport InsuredPeriod from \"../Components/quick-business/InsuredPeriod\";\nimport SearchableField from \"../Components/quick-business/optional/SearchableField\"\nimport { useSplatProcessState } from '@splat/splat-react'\nimport {SPLATFIELD} from '../Components/quick-business/splat/vars'\nimport SplatData from '../Data/Splat-data'\nimport SirButton from \"../Components/common/SirButton\";\nimport ReportingUnit from \"../Components/quick-business/ReportingUnit\";\nimport Currency from \"../Components/quick-business/Currency\";\nimport NrOfBusinesses from '../Components/quick-business/NrOfBusinesses'\nimport SirTextField from \"../Components/common/SirTextField\";\nimport SirField from \"../Components/common/SirField\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    maxWidth: theme.spacing(72),\n    margin: '0 auto',\n    padding: theme.spacing(3, 0),\n    backgroundColor: theme.palette.background.paper\n  },\n}));\n\n\nexport default function Labs(props) {\n  const classes = useStyles()\n  const processState = useSplatProcessState()\n\n  return (\n    <div className={classes.root}>\n      <Section>\n        <SirField>\n          <SirTextField></SirTextField>\n        </SirField>\n      </Section>\n      <Section>\n        <SearchableField label='Broker' splatField={SPLATFIELD.BROKER} data={SplatData.fakeCompanies} />\n      </Section>\n      <Section>\n        <ReportingUnit />\n      </Section>\n      <Section>\n        <Currency />\n      </Section>\n      <Section>\n        <NrOfBusinesses />\n      </Section>\n\n    </div>\n  )\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\n\nimport { SplProcess } from \"@splat/splat-react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./Styles/theme\";\nimport Splat from \"./Data/Splat-data\";\nimport { logger } from \"./SplatComponents/splatBackendReducer\";\nimport CreateQuickBusiness from \"./Process/CreateQuickBusiness\";\nimport Labs from './Process/Labs'\n\nfunction App() {\n  // make sure we can see in the console what kind of actions we are creating\n  const middleware = [logger];\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <SplProcess\n          state={{ typeData: Splat.typeData, state: Splat.state, instanceUri: Splat.event.origin, lastKnownEventId: Splat.event.eventId }}\n          middleware={middleware}\n          name=\"ContractPOCoverview\"\n        >\n          <Router>\n            <Switch>\n              <Route path='/labs'>\n                <Labs />\n              </Route>\n              \n              <Route path=\"/\">\n                <CreateQuickBusiness />\n              </Route>              \n            </Switch>\n          </Router>\n        </SplProcess>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}